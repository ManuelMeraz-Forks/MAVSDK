// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: info_server/info_server.proto

#include "info_server/info_server.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace mavsdk {
namespace rpc {
namespace info_server {
constexpr ProvideAutopilotVersionRequest::ProvideAutopilotVersionRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ProvideAutopilotVersionRequestDefaultTypeInternal {
  constexpr ProvideAutopilotVersionRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProvideAutopilotVersionRequestDefaultTypeInternal() {}
  union {
    ProvideAutopilotVersionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProvideAutopilotVersionRequestDefaultTypeInternal _ProvideAutopilotVersionRequest_default_instance_;
constexpr ProvideAutopilotVersionResponse::ProvideAutopilotVersionResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : info_result_(nullptr)
  , protocol_version_info_(nullptr){}
struct ProvideAutopilotVersionResponseDefaultTypeInternal {
  constexpr ProvideAutopilotVersionResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProvideAutopilotVersionResponseDefaultTypeInternal() {}
  union {
    ProvideAutopilotVersionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProvideAutopilotVersionResponseDefaultTypeInternal _ProvideAutopilotVersionResponse_default_instance_;
constexpr ProvideProtocolVersionRequest::ProvideProtocolVersionRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ProvideProtocolVersionRequestDefaultTypeInternal {
  constexpr ProvideProtocolVersionRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProvideProtocolVersionRequestDefaultTypeInternal() {}
  union {
    ProvideProtocolVersionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProvideProtocolVersionRequestDefaultTypeInternal _ProvideProtocolVersionRequest_default_instance_;
constexpr ProvideProtocolVersionResponse::ProvideProtocolVersionResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : info_result_(nullptr)
  , protocol_version_info_(nullptr){}
struct ProvideProtocolVersionResponseDefaultTypeInternal {
  constexpr ProvideProtocolVersionResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProvideProtocolVersionResponseDefaultTypeInternal() {}
  union {
    ProvideProtocolVersionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProvideProtocolVersionResponseDefaultTypeInternal _ProvideProtocolVersionResponse_default_instance_;
constexpr ProvideComponentInformationRequest::ProvideComponentInformationRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ProvideComponentInformationRequestDefaultTypeInternal {
  constexpr ProvideComponentInformationRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProvideComponentInformationRequestDefaultTypeInternal() {}
  union {
    ProvideComponentInformationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProvideComponentInformationRequestDefaultTypeInternal _ProvideComponentInformationRequest_default_instance_;
constexpr ProvideComponentInformationResponse::ProvideComponentInformationResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : info_result_(nullptr)
  , component_information_info_(nullptr){}
struct ProvideComponentInformationResponseDefaultTypeInternal {
  constexpr ProvideComponentInformationResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProvideComponentInformationResponseDefaultTypeInternal() {}
  union {
    ProvideComponentInformationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProvideComponentInformationResponseDefaultTypeInternal _ProvideComponentInformationResponse_default_instance_;
constexpr SetAutopilotVersionRequest::SetAutopilotVersionRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : autopilot_version_info_(nullptr){}
struct SetAutopilotVersionRequestDefaultTypeInternal {
  constexpr SetAutopilotVersionRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetAutopilotVersionRequestDefaultTypeInternal() {}
  union {
    SetAutopilotVersionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetAutopilotVersionRequestDefaultTypeInternal _SetAutopilotVersionRequest_default_instance_;
constexpr SetAutopilotVersionResponse::SetAutopilotVersionResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : info_result_(nullptr){}
struct SetAutopilotVersionResponseDefaultTypeInternal {
  constexpr SetAutopilotVersionResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetAutopilotVersionResponseDefaultTypeInternal() {}
  union {
    SetAutopilotVersionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetAutopilotVersionResponseDefaultTypeInternal _SetAutopilotVersionResponse_default_instance_;
constexpr SetProtocolVersionRequest::SetProtocolVersionRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : protocol_version_info_(nullptr){}
struct SetProtocolVersionRequestDefaultTypeInternal {
  constexpr SetProtocolVersionRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetProtocolVersionRequestDefaultTypeInternal() {}
  union {
    SetProtocolVersionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetProtocolVersionRequestDefaultTypeInternal _SetProtocolVersionRequest_default_instance_;
constexpr SetProtocolVersionResponse::SetProtocolVersionResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : info_result_(nullptr){}
struct SetProtocolVersionResponseDefaultTypeInternal {
  constexpr SetProtocolVersionResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetProtocolVersionResponseDefaultTypeInternal() {}
  union {
    SetProtocolVersionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetProtocolVersionResponseDefaultTypeInternal _SetProtocolVersionResponse_default_instance_;
constexpr SetComponentInformationRequest::SetComponentInformationRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : component_information_info_(nullptr){}
struct SetComponentInformationRequestDefaultTypeInternal {
  constexpr SetComponentInformationRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetComponentInformationRequestDefaultTypeInternal() {}
  union {
    SetComponentInformationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetComponentInformationRequestDefaultTypeInternal _SetComponentInformationRequest_default_instance_;
constexpr SetComponentInformationResponse::SetComponentInformationResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : info_result_(nullptr){}
struct SetComponentInformationResponseDefaultTypeInternal {
  constexpr SetComponentInformationResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetComponentInformationResponseDefaultTypeInternal() {}
  union {
    SetComponentInformationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetComponentInformationResponseDefaultTypeInternal _SetComponentInformationResponse_default_instance_;
constexpr ProtocolVersion::ProtocolVersion(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : spec_version_hash_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , library_version_hash_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , version_(0u)
  , min_version_(0u)
  , max_version_(0u){}
struct ProtocolVersionDefaultTypeInternal {
  constexpr ProtocolVersionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProtocolVersionDefaultTypeInternal() {}
  union {
    ProtocolVersion _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProtocolVersionDefaultTypeInternal _ProtocolVersion_default_instance_;
constexpr AutopilotVersion::AutopilotVersion(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : flight_custom_version_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , middleware_custom_version_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , os_custom_version_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , uid2_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , capabilities_(uint64_t{0u})
  , flight_sw_version_(0u)
  , middleware_sw_version_(0u)
  , os_sw_version_(0u)
  , board_version_(0u)
  , vendor_id_(0u)
  , product_id_(0u)
  , uid_(uint64_t{0u}){}
struct AutopilotVersionDefaultTypeInternal {
  constexpr AutopilotVersionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AutopilotVersionDefaultTypeInternal() {}
  union {
    AutopilotVersion _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AutopilotVersionDefaultTypeInternal _AutopilotVersion_default_instance_;
constexpr ComponentInformation::ComponentInformation(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : general_metadata_uri_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , peripherals_metadata_uri_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , time_boot_ms_(0u)
  , general_metadata_file_crc_(0u)
  , peripherals_metadata_file_crc_(0u){}
struct ComponentInformationDefaultTypeInternal {
  constexpr ComponentInformationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ComponentInformationDefaultTypeInternal() {}
  union {
    ComponentInformation _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ComponentInformationDefaultTypeInternal _ComponentInformation_default_instance_;
constexpr InfoResult::InfoResult(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_str_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(0)
{}
struct InfoResultDefaultTypeInternal {
  constexpr InfoResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~InfoResultDefaultTypeInternal() {}
  union {
    InfoResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT InfoResultDefaultTypeInternal _InfoResult_default_instance_;
}  // namespace info_server
}  // namespace rpc
}  // namespace mavsdk
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_info_5fserver_2finfo_5fserver_2eproto[16];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_info_5fserver_2finfo_5fserver_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_info_5fserver_2finfo_5fserver_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_info_5fserver_2finfo_5fserver_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse, info_result_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse, protocol_version_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::ProvideProtocolVersionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::ProvideProtocolVersionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::ProvideProtocolVersionResponse, info_result_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::ProvideProtocolVersionResponse, protocol_version_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::ProvideComponentInformationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::ProvideComponentInformationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::ProvideComponentInformationResponse, info_result_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::ProvideComponentInformationResponse, component_information_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::SetAutopilotVersionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::SetAutopilotVersionRequest, autopilot_version_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::SetAutopilotVersionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::SetAutopilotVersionResponse, info_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::SetProtocolVersionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::SetProtocolVersionRequest, protocol_version_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::SetProtocolVersionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::SetProtocolVersionResponse, info_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::SetComponentInformationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::SetComponentInformationRequest, component_information_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::SetComponentInformationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::SetComponentInformationResponse, info_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::ProtocolVersion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::ProtocolVersion, version_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::ProtocolVersion, min_version_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::ProtocolVersion, max_version_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::ProtocolVersion, spec_version_hash_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::ProtocolVersion, library_version_hash_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::AutopilotVersion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::AutopilotVersion, capabilities_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::AutopilotVersion, flight_sw_version_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::AutopilotVersion, middleware_sw_version_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::AutopilotVersion, os_sw_version_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::AutopilotVersion, board_version_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::AutopilotVersion, flight_custom_version_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::AutopilotVersion, middleware_custom_version_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::AutopilotVersion, os_custom_version_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::AutopilotVersion, vendor_id_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::AutopilotVersion, product_id_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::AutopilotVersion, uid_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::AutopilotVersion, uid2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::ComponentInformation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::ComponentInformation, time_boot_ms_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::ComponentInformation, general_metadata_file_crc_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::ComponentInformation, general_metadata_uri_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::ComponentInformation, peripherals_metadata_file_crc_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::ComponentInformation, peripherals_metadata_uri_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::InfoResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::InfoResult, result_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info_server::InfoResult, result_str_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest)},
  { 5, -1, sizeof(::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse)},
  { 12, -1, sizeof(::mavsdk::rpc::info_server::ProvideProtocolVersionRequest)},
  { 17, -1, sizeof(::mavsdk::rpc::info_server::ProvideProtocolVersionResponse)},
  { 24, -1, sizeof(::mavsdk::rpc::info_server::ProvideComponentInformationRequest)},
  { 29, -1, sizeof(::mavsdk::rpc::info_server::ProvideComponentInformationResponse)},
  { 36, -1, sizeof(::mavsdk::rpc::info_server::SetAutopilotVersionRequest)},
  { 42, -1, sizeof(::mavsdk::rpc::info_server::SetAutopilotVersionResponse)},
  { 48, -1, sizeof(::mavsdk::rpc::info_server::SetProtocolVersionRequest)},
  { 54, -1, sizeof(::mavsdk::rpc::info_server::SetProtocolVersionResponse)},
  { 60, -1, sizeof(::mavsdk::rpc::info_server::SetComponentInformationRequest)},
  { 66, -1, sizeof(::mavsdk::rpc::info_server::SetComponentInformationResponse)},
  { 72, -1, sizeof(::mavsdk::rpc::info_server::ProtocolVersion)},
  { 82, -1, sizeof(::mavsdk::rpc::info_server::AutopilotVersion)},
  { 99, -1, sizeof(::mavsdk::rpc::info_server::ComponentInformation)},
  { 109, -1, sizeof(::mavsdk::rpc::info_server::InfoResult)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::info_server::_ProvideAutopilotVersionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::info_server::_ProvideAutopilotVersionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::info_server::_ProvideProtocolVersionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::info_server::_ProvideProtocolVersionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::info_server::_ProvideComponentInformationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::info_server::_ProvideComponentInformationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::info_server::_SetAutopilotVersionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::info_server::_SetAutopilotVersionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::info_server::_SetProtocolVersionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::info_server::_SetProtocolVersionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::info_server::_SetComponentInformationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::info_server::_SetComponentInformationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::info_server::_ProtocolVersion_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::info_server::_AutopilotVersion_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::info_server::_ComponentInformation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::info_server::_InfoResult_default_instance_),
};

const char descriptor_table_protodef_info_5fserver_2finfo_5fserver_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\035info_server/info_server.proto\022\026mavsdk."
  "rpc.info_server\032\024mavsdk_options.proto\" \n"
  "\036ProvideAutopilotVersionRequest\"\243\001\n\037Prov"
  "ideAutopilotVersionResponse\0227\n\013info_resu"
  "lt\030\001 \001(\0132\".mavsdk.rpc.info_server.InfoRe"
  "sult\022G\n\025protocol_version_info\030\002 \001(\0132(.ma"
  "vsdk.rpc.info_server.AutopilotVersion\"\037\n"
  "\035ProvideProtocolVersionRequest\"\241\001\n\036Provi"
  "deProtocolVersionResponse\0227\n\013info_result"
  "\030\001 \001(\0132\".mavsdk.rpc.info_server.InfoResu"
  "lt\022F\n\025protocol_version_info\030\002 \001(\0132\'.mavs"
  "dk.rpc.info_server.ProtocolVersion\"$\n\"Pr"
  "ovideComponentInformationRequest\"\260\001\n#Pro"
  "videComponentInformationResponse\0227\n\013info"
  "_result\030\001 \001(\0132\".mavsdk.rpc.info_server.I"
  "nfoResult\022P\n\032component_information_info\030"
  "\002 \001(\0132,.mavsdk.rpc.info_server.Component"
  "Information\"f\n\032SetAutopilotVersionReques"
  "t\022H\n\026autopilot_version_info\030\001 \001(\0132(.mavs"
  "dk.rpc.info_server.AutopilotVersion\"V\n\033S"
  "etAutopilotVersionResponse\0227\n\013info_resul"
  "t\030\001 \001(\0132\".mavsdk.rpc.info_server.InfoRes"
  "ult\"c\n\031SetProtocolVersionRequest\022F\n\025prot"
  "ocol_version_info\030\001 \001(\0132\'.mavsdk.rpc.inf"
  "o_server.ProtocolVersion\"U\n\032SetProtocolV"
  "ersionResponse\0227\n\013info_result\030\001 \001(\0132\".ma"
  "vsdk.rpc.info_server.InfoResult\"r\n\036SetCo"
  "mponentInformationRequest\022P\n\032component_i"
  "nformation_info\030\001 \001(\0132,.mavsdk.rpc.info_"
  "server.ComponentInformation\"Z\n\037SetCompon"
  "entInformationResponse\0227\n\013info_result\030\001 "
  "\001(\0132\".mavsdk.rpc.info_server.InfoResult\""
  "\205\001\n\017ProtocolVersion\022\017\n\007version\030\001 \001(\r\022\023\n\013"
  "min_version\030\002 \001(\r\022\023\n\013max_version\030\003 \001(\r\022\031"
  "\n\021spec_version_hash\030\004 \001(\t\022\034\n\024library_ver"
  "sion_hash\030\005 \001(\t\"\257\002\n\020AutopilotVersion\022\024\n\014"
  "capabilities\030\001 \001(\004\022\031\n\021flight_sw_version\030"
  "\002 \001(\r\022\035\n\025middleware_sw_version\030\003 \001(\r\022\025\n\r"
  "os_sw_version\030\004 \001(\r\022\025\n\rboard_version\030\005 \001"
  "(\r\022\035\n\025flight_custom_version\030\006 \001(\t\022!\n\031mid"
  "dleware_custom_version\030\007 \001(\t\022\031\n\021os_custo"
  "m_version\030\010 \001(\t\022\021\n\tvendor_id\030\t \001(\r\022\022\n\npr"
  "oduct_id\030\n \001(\r\022\013\n\003uid\030\013 \001(\004\022\014\n\004uid2\030\014 \001("
  "\t\"\266\001\n\024ComponentInformation\022\024\n\014time_boot_"
  "ms\030\001 \001(\r\022!\n\031general_metadata_file_crc\030\002 "
  "\001(\r\022\034\n\024general_metadata_uri\030\003 \001(\t\022%\n\035per"
  "ipherals_metadata_file_crc\030\004 \001(\r\022 \n\030peri"
  "pherals_metadata_uri\030\005 \001(\t\"\314\001\n\nInfoResul"
  "t\0229\n\006result\030\001 \001(\0162).mavsdk.rpc.info_serv"
  "er.InfoResult.Result\022\022\n\nresult_str\030\002 \001(\t"
  "\"o\n\006Result\022\022\n\016RESULT_UNKNOWN\020\000\022\022\n\016RESULT"
  "_SUCCESS\020\001\022\'\n#RESULT_INFORMATION_NOT_REC"
  "EIVED_YET\020\002\022\024\n\020RESULT_NO_SYSTEM\020\0032\363\006\n\021In"
  "foServerService\022\220\001\n\027ProvideAutopilotVers"
  "ion\0226.mavsdk.rpc.info_server.ProvideAuto"
  "pilotVersionRequest\0327.mavsdk.rpc.info_se"
  "rver.ProvideAutopilotVersionResponse\"\004\200\265"
  "\030\001\022\215\001\n\026ProvideProtocolVersion\0225.mavsdk.r"
  "pc.info_server.ProvideProtocolVersionReq"
  "uest\0326.mavsdk.rpc.info_server.ProvidePro"
  "tocolVersionResponse\"\004\200\265\030\001\022\234\001\n\033ProvideCo"
  "mponentInformation\022:.mavsdk.rpc.info_ser"
  "ver.ProvideComponentInformationRequest\032;"
  ".mavsdk.rpc.info_server.ProvideComponent"
  "InformationResponse\"\004\200\265\030\001\022\204\001\n\023SetAutopil"
  "otVersion\0222.mavsdk.rpc.info_server.SetAu"
  "topilotVersionRequest\0323.mavsdk.rpc.info_"
  "server.SetAutopilotVersionResponse\"\004\200\265\030\001"
  "\022\201\001\n\022SetProtocolVersion\0221.mavsdk.rpc.inf"
  "o_server.SetProtocolVersionRequest\0322.mav"
  "sdk.rpc.info_server.SetProtocolVersionRe"
  "sponse\"\004\200\265\030\001\022\220\001\n\027SetComponentInformation"
  "\0226.mavsdk.rpc.info_server.SetComponentIn"
  "formationRequest\0327.mavsdk.rpc.info_serve"
  "r.SetComponentInformationResponse\"\004\200\265\030\001B"
  "8\n\025io.mavsdk.info_serverB\037ComponentInfor"
  "mationServerProtob\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_info_5fserver_2finfo_5fserver_2eproto_deps[1] = {
  &::descriptor_table_mavsdk_5foptions_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_info_5fserver_2finfo_5fserver_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_info_5fserver_2finfo_5fserver_2eproto = {
  false, false, 3065, descriptor_table_protodef_info_5fserver_2finfo_5fserver_2eproto, "info_server/info_server.proto", 
  &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_once, descriptor_table_info_5fserver_2finfo_5fserver_2eproto_deps, 1, 16,
  schemas, file_default_instances, TableStruct_info_5fserver_2finfo_5fserver_2eproto::offsets,
  file_level_metadata_info_5fserver_2finfo_5fserver_2eproto, file_level_enum_descriptors_info_5fserver_2finfo_5fserver_2eproto, file_level_service_descriptors_info_5fserver_2finfo_5fserver_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_info_5fserver_2finfo_5fserver_2eproto_getter() {
  return &descriptor_table_info_5fserver_2finfo_5fserver_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_info_5fserver_2finfo_5fserver_2eproto(&descriptor_table_info_5fserver_2finfo_5fserver_2eproto);
namespace mavsdk {
namespace rpc {
namespace info_server {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* InfoResult_Result_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_info_5fserver_2finfo_5fserver_2eproto);
  return file_level_enum_descriptors_info_5fserver_2finfo_5fserver_2eproto[0];
}
bool InfoResult_Result_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr InfoResult_Result InfoResult::RESULT_UNKNOWN;
constexpr InfoResult_Result InfoResult::RESULT_SUCCESS;
constexpr InfoResult_Result InfoResult::RESULT_INFORMATION_NOT_RECEIVED_YET;
constexpr InfoResult_Result InfoResult::RESULT_NO_SYSTEM;
constexpr InfoResult_Result InfoResult::Result_MIN;
constexpr InfoResult_Result InfoResult::Result_MAX;
constexpr int InfoResult::Result_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

class ProvideAutopilotVersionRequest::_Internal {
 public:
};

ProvideAutopilotVersionRequest::ProvideAutopilotVersionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.info_server.ProvideAutopilotVersionRequest)
}
ProvideAutopilotVersionRequest::ProvideAutopilotVersionRequest(const ProvideAutopilotVersionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.info_server.ProvideAutopilotVersionRequest)
}

inline void ProvideAutopilotVersionRequest::SharedCtor() {
}

ProvideAutopilotVersionRequest::~ProvideAutopilotVersionRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.info_server.ProvideAutopilotVersionRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ProvideAutopilotVersionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ProvideAutopilotVersionRequest::ArenaDtor(void* object) {
  ProvideAutopilotVersionRequest* _this = reinterpret_cast< ProvideAutopilotVersionRequest* >(object);
  (void)_this;
}
void ProvideAutopilotVersionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProvideAutopilotVersionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProvideAutopilotVersionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.info_server.ProvideAutopilotVersionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProvideAutopilotVersionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProvideAutopilotVersionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.info_server.ProvideAutopilotVersionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.info_server.ProvideAutopilotVersionRequest)
  return target;
}

size_t ProvideAutopilotVersionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.info_server.ProvideAutopilotVersionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProvideAutopilotVersionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ProvideAutopilotVersionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProvideAutopilotVersionRequest::GetClassData() const { return &_class_data_; }

void ProvideAutopilotVersionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ProvideAutopilotVersionRequest *>(to)->MergeFrom(
      static_cast<const ProvideAutopilotVersionRequest &>(from));
}


void ProvideAutopilotVersionRequest::MergeFrom(const ProvideAutopilotVersionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.info_server.ProvideAutopilotVersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProvideAutopilotVersionRequest::CopyFrom(const ProvideAutopilotVersionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.info_server.ProvideAutopilotVersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProvideAutopilotVersionRequest::IsInitialized() const {
  return true;
}

void ProvideAutopilotVersionRequest::InternalSwap(ProvideAutopilotVersionRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProvideAutopilotVersionRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_getter, &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_once,
      file_level_metadata_info_5fserver_2finfo_5fserver_2eproto[0]);
}

// ===================================================================

class ProvideAutopilotVersionResponse::_Internal {
 public:
  static const ::mavsdk::rpc::info_server::InfoResult& info_result(const ProvideAutopilotVersionResponse* msg);
  static const ::mavsdk::rpc::info_server::AutopilotVersion& protocol_version_info(const ProvideAutopilotVersionResponse* msg);
};

const ::mavsdk::rpc::info_server::InfoResult&
ProvideAutopilotVersionResponse::_Internal::info_result(const ProvideAutopilotVersionResponse* msg) {
  return *msg->info_result_;
}
const ::mavsdk::rpc::info_server::AutopilotVersion&
ProvideAutopilotVersionResponse::_Internal::protocol_version_info(const ProvideAutopilotVersionResponse* msg) {
  return *msg->protocol_version_info_;
}
ProvideAutopilotVersionResponse::ProvideAutopilotVersionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.info_server.ProvideAutopilotVersionResponse)
}
ProvideAutopilotVersionResponse::ProvideAutopilotVersionResponse(const ProvideAutopilotVersionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_info_result()) {
    info_result_ = new ::mavsdk::rpc::info_server::InfoResult(*from.info_result_);
  } else {
    info_result_ = nullptr;
  }
  if (from._internal_has_protocol_version_info()) {
    protocol_version_info_ = new ::mavsdk::rpc::info_server::AutopilotVersion(*from.protocol_version_info_);
  } else {
    protocol_version_info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.info_server.ProvideAutopilotVersionResponse)
}

inline void ProvideAutopilotVersionResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&info_result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&protocol_version_info_) -
    reinterpret_cast<char*>(&info_result_)) + sizeof(protocol_version_info_));
}

ProvideAutopilotVersionResponse::~ProvideAutopilotVersionResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.info_server.ProvideAutopilotVersionResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ProvideAutopilotVersionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete info_result_;
  if (this != internal_default_instance()) delete protocol_version_info_;
}

void ProvideAutopilotVersionResponse::ArenaDtor(void* object) {
  ProvideAutopilotVersionResponse* _this = reinterpret_cast< ProvideAutopilotVersionResponse* >(object);
  (void)_this;
}
void ProvideAutopilotVersionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProvideAutopilotVersionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProvideAutopilotVersionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.info_server.ProvideAutopilotVersionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && info_result_ != nullptr) {
    delete info_result_;
  }
  info_result_ = nullptr;
  if (GetArenaForAllocation() == nullptr && protocol_version_info_ != nullptr) {
    delete protocol_version_info_;
  }
  protocol_version_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProvideAutopilotVersionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.info_server.InfoResult info_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_info_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .mavsdk.rpc.info_server.AutopilotVersion protocol_version_info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_protocol_version_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProvideAutopilotVersionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.info_server.ProvideAutopilotVersionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.info_server.InfoResult info_result = 1;
  if (this->_internal_has_info_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::info_result(this), target, stream);
  }

  // .mavsdk.rpc.info_server.AutopilotVersion protocol_version_info = 2;
  if (this->_internal_has_protocol_version_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::protocol_version_info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.info_server.ProvideAutopilotVersionResponse)
  return target;
}

size_t ProvideAutopilotVersionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.info_server.ProvideAutopilotVersionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.info_server.InfoResult info_result = 1;
  if (this->_internal_has_info_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_result_);
  }

  // .mavsdk.rpc.info_server.AutopilotVersion protocol_version_info = 2;
  if (this->_internal_has_protocol_version_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *protocol_version_info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProvideAutopilotVersionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ProvideAutopilotVersionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProvideAutopilotVersionResponse::GetClassData() const { return &_class_data_; }

void ProvideAutopilotVersionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ProvideAutopilotVersionResponse *>(to)->MergeFrom(
      static_cast<const ProvideAutopilotVersionResponse &>(from));
}


void ProvideAutopilotVersionResponse::MergeFrom(const ProvideAutopilotVersionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.info_server.ProvideAutopilotVersionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_info_result()) {
    _internal_mutable_info_result()->::mavsdk::rpc::info_server::InfoResult::MergeFrom(from._internal_info_result());
  }
  if (from._internal_has_protocol_version_info()) {
    _internal_mutable_protocol_version_info()->::mavsdk::rpc::info_server::AutopilotVersion::MergeFrom(from._internal_protocol_version_info());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProvideAutopilotVersionResponse::CopyFrom(const ProvideAutopilotVersionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.info_server.ProvideAutopilotVersionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProvideAutopilotVersionResponse::IsInitialized() const {
  return true;
}

void ProvideAutopilotVersionResponse::InternalSwap(ProvideAutopilotVersionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProvideAutopilotVersionResponse, protocol_version_info_)
      + sizeof(ProvideAutopilotVersionResponse::protocol_version_info_)
      - PROTOBUF_FIELD_OFFSET(ProvideAutopilotVersionResponse, info_result_)>(
          reinterpret_cast<char*>(&info_result_),
          reinterpret_cast<char*>(&other->info_result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProvideAutopilotVersionResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_getter, &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_once,
      file_level_metadata_info_5fserver_2finfo_5fserver_2eproto[1]);
}

// ===================================================================

class ProvideProtocolVersionRequest::_Internal {
 public:
};

ProvideProtocolVersionRequest::ProvideProtocolVersionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.info_server.ProvideProtocolVersionRequest)
}
ProvideProtocolVersionRequest::ProvideProtocolVersionRequest(const ProvideProtocolVersionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.info_server.ProvideProtocolVersionRequest)
}

inline void ProvideProtocolVersionRequest::SharedCtor() {
}

ProvideProtocolVersionRequest::~ProvideProtocolVersionRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.info_server.ProvideProtocolVersionRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ProvideProtocolVersionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ProvideProtocolVersionRequest::ArenaDtor(void* object) {
  ProvideProtocolVersionRequest* _this = reinterpret_cast< ProvideProtocolVersionRequest* >(object);
  (void)_this;
}
void ProvideProtocolVersionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProvideProtocolVersionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProvideProtocolVersionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.info_server.ProvideProtocolVersionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProvideProtocolVersionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProvideProtocolVersionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.info_server.ProvideProtocolVersionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.info_server.ProvideProtocolVersionRequest)
  return target;
}

size_t ProvideProtocolVersionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.info_server.ProvideProtocolVersionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProvideProtocolVersionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ProvideProtocolVersionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProvideProtocolVersionRequest::GetClassData() const { return &_class_data_; }

void ProvideProtocolVersionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ProvideProtocolVersionRequest *>(to)->MergeFrom(
      static_cast<const ProvideProtocolVersionRequest &>(from));
}


void ProvideProtocolVersionRequest::MergeFrom(const ProvideProtocolVersionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.info_server.ProvideProtocolVersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProvideProtocolVersionRequest::CopyFrom(const ProvideProtocolVersionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.info_server.ProvideProtocolVersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProvideProtocolVersionRequest::IsInitialized() const {
  return true;
}

void ProvideProtocolVersionRequest::InternalSwap(ProvideProtocolVersionRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProvideProtocolVersionRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_getter, &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_once,
      file_level_metadata_info_5fserver_2finfo_5fserver_2eproto[2]);
}

// ===================================================================

class ProvideProtocolVersionResponse::_Internal {
 public:
  static const ::mavsdk::rpc::info_server::InfoResult& info_result(const ProvideProtocolVersionResponse* msg);
  static const ::mavsdk::rpc::info_server::ProtocolVersion& protocol_version_info(const ProvideProtocolVersionResponse* msg);
};

const ::mavsdk::rpc::info_server::InfoResult&
ProvideProtocolVersionResponse::_Internal::info_result(const ProvideProtocolVersionResponse* msg) {
  return *msg->info_result_;
}
const ::mavsdk::rpc::info_server::ProtocolVersion&
ProvideProtocolVersionResponse::_Internal::protocol_version_info(const ProvideProtocolVersionResponse* msg) {
  return *msg->protocol_version_info_;
}
ProvideProtocolVersionResponse::ProvideProtocolVersionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.info_server.ProvideProtocolVersionResponse)
}
ProvideProtocolVersionResponse::ProvideProtocolVersionResponse(const ProvideProtocolVersionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_info_result()) {
    info_result_ = new ::mavsdk::rpc::info_server::InfoResult(*from.info_result_);
  } else {
    info_result_ = nullptr;
  }
  if (from._internal_has_protocol_version_info()) {
    protocol_version_info_ = new ::mavsdk::rpc::info_server::ProtocolVersion(*from.protocol_version_info_);
  } else {
    protocol_version_info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.info_server.ProvideProtocolVersionResponse)
}

inline void ProvideProtocolVersionResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&info_result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&protocol_version_info_) -
    reinterpret_cast<char*>(&info_result_)) + sizeof(protocol_version_info_));
}

ProvideProtocolVersionResponse::~ProvideProtocolVersionResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.info_server.ProvideProtocolVersionResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ProvideProtocolVersionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete info_result_;
  if (this != internal_default_instance()) delete protocol_version_info_;
}

void ProvideProtocolVersionResponse::ArenaDtor(void* object) {
  ProvideProtocolVersionResponse* _this = reinterpret_cast< ProvideProtocolVersionResponse* >(object);
  (void)_this;
}
void ProvideProtocolVersionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProvideProtocolVersionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProvideProtocolVersionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.info_server.ProvideProtocolVersionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && info_result_ != nullptr) {
    delete info_result_;
  }
  info_result_ = nullptr;
  if (GetArenaForAllocation() == nullptr && protocol_version_info_ != nullptr) {
    delete protocol_version_info_;
  }
  protocol_version_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProvideProtocolVersionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.info_server.InfoResult info_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_info_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .mavsdk.rpc.info_server.ProtocolVersion protocol_version_info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_protocol_version_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProvideProtocolVersionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.info_server.ProvideProtocolVersionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.info_server.InfoResult info_result = 1;
  if (this->_internal_has_info_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::info_result(this), target, stream);
  }

  // .mavsdk.rpc.info_server.ProtocolVersion protocol_version_info = 2;
  if (this->_internal_has_protocol_version_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::protocol_version_info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.info_server.ProvideProtocolVersionResponse)
  return target;
}

size_t ProvideProtocolVersionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.info_server.ProvideProtocolVersionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.info_server.InfoResult info_result = 1;
  if (this->_internal_has_info_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_result_);
  }

  // .mavsdk.rpc.info_server.ProtocolVersion protocol_version_info = 2;
  if (this->_internal_has_protocol_version_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *protocol_version_info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProvideProtocolVersionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ProvideProtocolVersionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProvideProtocolVersionResponse::GetClassData() const { return &_class_data_; }

void ProvideProtocolVersionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ProvideProtocolVersionResponse *>(to)->MergeFrom(
      static_cast<const ProvideProtocolVersionResponse &>(from));
}


void ProvideProtocolVersionResponse::MergeFrom(const ProvideProtocolVersionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.info_server.ProvideProtocolVersionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_info_result()) {
    _internal_mutable_info_result()->::mavsdk::rpc::info_server::InfoResult::MergeFrom(from._internal_info_result());
  }
  if (from._internal_has_protocol_version_info()) {
    _internal_mutable_protocol_version_info()->::mavsdk::rpc::info_server::ProtocolVersion::MergeFrom(from._internal_protocol_version_info());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProvideProtocolVersionResponse::CopyFrom(const ProvideProtocolVersionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.info_server.ProvideProtocolVersionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProvideProtocolVersionResponse::IsInitialized() const {
  return true;
}

void ProvideProtocolVersionResponse::InternalSwap(ProvideProtocolVersionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProvideProtocolVersionResponse, protocol_version_info_)
      + sizeof(ProvideProtocolVersionResponse::protocol_version_info_)
      - PROTOBUF_FIELD_OFFSET(ProvideProtocolVersionResponse, info_result_)>(
          reinterpret_cast<char*>(&info_result_),
          reinterpret_cast<char*>(&other->info_result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProvideProtocolVersionResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_getter, &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_once,
      file_level_metadata_info_5fserver_2finfo_5fserver_2eproto[3]);
}

// ===================================================================

class ProvideComponentInformationRequest::_Internal {
 public:
};

ProvideComponentInformationRequest::ProvideComponentInformationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.info_server.ProvideComponentInformationRequest)
}
ProvideComponentInformationRequest::ProvideComponentInformationRequest(const ProvideComponentInformationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.info_server.ProvideComponentInformationRequest)
}

inline void ProvideComponentInformationRequest::SharedCtor() {
}

ProvideComponentInformationRequest::~ProvideComponentInformationRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.info_server.ProvideComponentInformationRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ProvideComponentInformationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ProvideComponentInformationRequest::ArenaDtor(void* object) {
  ProvideComponentInformationRequest* _this = reinterpret_cast< ProvideComponentInformationRequest* >(object);
  (void)_this;
}
void ProvideComponentInformationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProvideComponentInformationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProvideComponentInformationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.info_server.ProvideComponentInformationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProvideComponentInformationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProvideComponentInformationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.info_server.ProvideComponentInformationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.info_server.ProvideComponentInformationRequest)
  return target;
}

size_t ProvideComponentInformationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.info_server.ProvideComponentInformationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProvideComponentInformationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ProvideComponentInformationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProvideComponentInformationRequest::GetClassData() const { return &_class_data_; }

void ProvideComponentInformationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ProvideComponentInformationRequest *>(to)->MergeFrom(
      static_cast<const ProvideComponentInformationRequest &>(from));
}


void ProvideComponentInformationRequest::MergeFrom(const ProvideComponentInformationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.info_server.ProvideComponentInformationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProvideComponentInformationRequest::CopyFrom(const ProvideComponentInformationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.info_server.ProvideComponentInformationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProvideComponentInformationRequest::IsInitialized() const {
  return true;
}

void ProvideComponentInformationRequest::InternalSwap(ProvideComponentInformationRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProvideComponentInformationRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_getter, &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_once,
      file_level_metadata_info_5fserver_2finfo_5fserver_2eproto[4]);
}

// ===================================================================

class ProvideComponentInformationResponse::_Internal {
 public:
  static const ::mavsdk::rpc::info_server::InfoResult& info_result(const ProvideComponentInformationResponse* msg);
  static const ::mavsdk::rpc::info_server::ComponentInformation& component_information_info(const ProvideComponentInformationResponse* msg);
};

const ::mavsdk::rpc::info_server::InfoResult&
ProvideComponentInformationResponse::_Internal::info_result(const ProvideComponentInformationResponse* msg) {
  return *msg->info_result_;
}
const ::mavsdk::rpc::info_server::ComponentInformation&
ProvideComponentInformationResponse::_Internal::component_information_info(const ProvideComponentInformationResponse* msg) {
  return *msg->component_information_info_;
}
ProvideComponentInformationResponse::ProvideComponentInformationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.info_server.ProvideComponentInformationResponse)
}
ProvideComponentInformationResponse::ProvideComponentInformationResponse(const ProvideComponentInformationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_info_result()) {
    info_result_ = new ::mavsdk::rpc::info_server::InfoResult(*from.info_result_);
  } else {
    info_result_ = nullptr;
  }
  if (from._internal_has_component_information_info()) {
    component_information_info_ = new ::mavsdk::rpc::info_server::ComponentInformation(*from.component_information_info_);
  } else {
    component_information_info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.info_server.ProvideComponentInformationResponse)
}

inline void ProvideComponentInformationResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&info_result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&component_information_info_) -
    reinterpret_cast<char*>(&info_result_)) + sizeof(component_information_info_));
}

ProvideComponentInformationResponse::~ProvideComponentInformationResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.info_server.ProvideComponentInformationResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ProvideComponentInformationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete info_result_;
  if (this != internal_default_instance()) delete component_information_info_;
}

void ProvideComponentInformationResponse::ArenaDtor(void* object) {
  ProvideComponentInformationResponse* _this = reinterpret_cast< ProvideComponentInformationResponse* >(object);
  (void)_this;
}
void ProvideComponentInformationResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProvideComponentInformationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProvideComponentInformationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.info_server.ProvideComponentInformationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && info_result_ != nullptr) {
    delete info_result_;
  }
  info_result_ = nullptr;
  if (GetArenaForAllocation() == nullptr && component_information_info_ != nullptr) {
    delete component_information_info_;
  }
  component_information_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProvideComponentInformationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.info_server.InfoResult info_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_info_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .mavsdk.rpc.info_server.ComponentInformation component_information_info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_component_information_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProvideComponentInformationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.info_server.ProvideComponentInformationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.info_server.InfoResult info_result = 1;
  if (this->_internal_has_info_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::info_result(this), target, stream);
  }

  // .mavsdk.rpc.info_server.ComponentInformation component_information_info = 2;
  if (this->_internal_has_component_information_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::component_information_info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.info_server.ProvideComponentInformationResponse)
  return target;
}

size_t ProvideComponentInformationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.info_server.ProvideComponentInformationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.info_server.InfoResult info_result = 1;
  if (this->_internal_has_info_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_result_);
  }

  // .mavsdk.rpc.info_server.ComponentInformation component_information_info = 2;
  if (this->_internal_has_component_information_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *component_information_info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProvideComponentInformationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ProvideComponentInformationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProvideComponentInformationResponse::GetClassData() const { return &_class_data_; }

void ProvideComponentInformationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ProvideComponentInformationResponse *>(to)->MergeFrom(
      static_cast<const ProvideComponentInformationResponse &>(from));
}


void ProvideComponentInformationResponse::MergeFrom(const ProvideComponentInformationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.info_server.ProvideComponentInformationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_info_result()) {
    _internal_mutable_info_result()->::mavsdk::rpc::info_server::InfoResult::MergeFrom(from._internal_info_result());
  }
  if (from._internal_has_component_information_info()) {
    _internal_mutable_component_information_info()->::mavsdk::rpc::info_server::ComponentInformation::MergeFrom(from._internal_component_information_info());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProvideComponentInformationResponse::CopyFrom(const ProvideComponentInformationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.info_server.ProvideComponentInformationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProvideComponentInformationResponse::IsInitialized() const {
  return true;
}

void ProvideComponentInformationResponse::InternalSwap(ProvideComponentInformationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProvideComponentInformationResponse, component_information_info_)
      + sizeof(ProvideComponentInformationResponse::component_information_info_)
      - PROTOBUF_FIELD_OFFSET(ProvideComponentInformationResponse, info_result_)>(
          reinterpret_cast<char*>(&info_result_),
          reinterpret_cast<char*>(&other->info_result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProvideComponentInformationResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_getter, &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_once,
      file_level_metadata_info_5fserver_2finfo_5fserver_2eproto[5]);
}

// ===================================================================

class SetAutopilotVersionRequest::_Internal {
 public:
  static const ::mavsdk::rpc::info_server::AutopilotVersion& autopilot_version_info(const SetAutopilotVersionRequest* msg);
};

const ::mavsdk::rpc::info_server::AutopilotVersion&
SetAutopilotVersionRequest::_Internal::autopilot_version_info(const SetAutopilotVersionRequest* msg) {
  return *msg->autopilot_version_info_;
}
SetAutopilotVersionRequest::SetAutopilotVersionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.info_server.SetAutopilotVersionRequest)
}
SetAutopilotVersionRequest::SetAutopilotVersionRequest(const SetAutopilotVersionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_autopilot_version_info()) {
    autopilot_version_info_ = new ::mavsdk::rpc::info_server::AutopilotVersion(*from.autopilot_version_info_);
  } else {
    autopilot_version_info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.info_server.SetAutopilotVersionRequest)
}

inline void SetAutopilotVersionRequest::SharedCtor() {
autopilot_version_info_ = nullptr;
}

SetAutopilotVersionRequest::~SetAutopilotVersionRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.info_server.SetAutopilotVersionRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SetAutopilotVersionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete autopilot_version_info_;
}

void SetAutopilotVersionRequest::ArenaDtor(void* object) {
  SetAutopilotVersionRequest* _this = reinterpret_cast< SetAutopilotVersionRequest* >(object);
  (void)_this;
}
void SetAutopilotVersionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetAutopilotVersionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetAutopilotVersionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.info_server.SetAutopilotVersionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && autopilot_version_info_ != nullptr) {
    delete autopilot_version_info_;
  }
  autopilot_version_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetAutopilotVersionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.info_server.AutopilotVersion autopilot_version_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_autopilot_version_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetAutopilotVersionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.info_server.SetAutopilotVersionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.info_server.AutopilotVersion autopilot_version_info = 1;
  if (this->_internal_has_autopilot_version_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::autopilot_version_info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.info_server.SetAutopilotVersionRequest)
  return target;
}

size_t SetAutopilotVersionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.info_server.SetAutopilotVersionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.info_server.AutopilotVersion autopilot_version_info = 1;
  if (this->_internal_has_autopilot_version_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *autopilot_version_info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetAutopilotVersionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SetAutopilotVersionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetAutopilotVersionRequest::GetClassData() const { return &_class_data_; }

void SetAutopilotVersionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<SetAutopilotVersionRequest *>(to)->MergeFrom(
      static_cast<const SetAutopilotVersionRequest &>(from));
}


void SetAutopilotVersionRequest::MergeFrom(const SetAutopilotVersionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.info_server.SetAutopilotVersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_autopilot_version_info()) {
    _internal_mutable_autopilot_version_info()->::mavsdk::rpc::info_server::AutopilotVersion::MergeFrom(from._internal_autopilot_version_info());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetAutopilotVersionRequest::CopyFrom(const SetAutopilotVersionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.info_server.SetAutopilotVersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAutopilotVersionRequest::IsInitialized() const {
  return true;
}

void SetAutopilotVersionRequest::InternalSwap(SetAutopilotVersionRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(autopilot_version_info_, other->autopilot_version_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetAutopilotVersionRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_getter, &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_once,
      file_level_metadata_info_5fserver_2finfo_5fserver_2eproto[6]);
}

// ===================================================================

class SetAutopilotVersionResponse::_Internal {
 public:
  static const ::mavsdk::rpc::info_server::InfoResult& info_result(const SetAutopilotVersionResponse* msg);
};

const ::mavsdk::rpc::info_server::InfoResult&
SetAutopilotVersionResponse::_Internal::info_result(const SetAutopilotVersionResponse* msg) {
  return *msg->info_result_;
}
SetAutopilotVersionResponse::SetAutopilotVersionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.info_server.SetAutopilotVersionResponse)
}
SetAutopilotVersionResponse::SetAutopilotVersionResponse(const SetAutopilotVersionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_info_result()) {
    info_result_ = new ::mavsdk::rpc::info_server::InfoResult(*from.info_result_);
  } else {
    info_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.info_server.SetAutopilotVersionResponse)
}

inline void SetAutopilotVersionResponse::SharedCtor() {
info_result_ = nullptr;
}

SetAutopilotVersionResponse::~SetAutopilotVersionResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.info_server.SetAutopilotVersionResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SetAutopilotVersionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete info_result_;
}

void SetAutopilotVersionResponse::ArenaDtor(void* object) {
  SetAutopilotVersionResponse* _this = reinterpret_cast< SetAutopilotVersionResponse* >(object);
  (void)_this;
}
void SetAutopilotVersionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetAutopilotVersionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetAutopilotVersionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.info_server.SetAutopilotVersionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && info_result_ != nullptr) {
    delete info_result_;
  }
  info_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetAutopilotVersionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.info_server.InfoResult info_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_info_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetAutopilotVersionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.info_server.SetAutopilotVersionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.info_server.InfoResult info_result = 1;
  if (this->_internal_has_info_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::info_result(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.info_server.SetAutopilotVersionResponse)
  return target;
}

size_t SetAutopilotVersionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.info_server.SetAutopilotVersionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.info_server.InfoResult info_result = 1;
  if (this->_internal_has_info_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetAutopilotVersionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SetAutopilotVersionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetAutopilotVersionResponse::GetClassData() const { return &_class_data_; }

void SetAutopilotVersionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<SetAutopilotVersionResponse *>(to)->MergeFrom(
      static_cast<const SetAutopilotVersionResponse &>(from));
}


void SetAutopilotVersionResponse::MergeFrom(const SetAutopilotVersionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.info_server.SetAutopilotVersionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_info_result()) {
    _internal_mutable_info_result()->::mavsdk::rpc::info_server::InfoResult::MergeFrom(from._internal_info_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetAutopilotVersionResponse::CopyFrom(const SetAutopilotVersionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.info_server.SetAutopilotVersionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAutopilotVersionResponse::IsInitialized() const {
  return true;
}

void SetAutopilotVersionResponse::InternalSwap(SetAutopilotVersionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(info_result_, other->info_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetAutopilotVersionResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_getter, &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_once,
      file_level_metadata_info_5fserver_2finfo_5fserver_2eproto[7]);
}

// ===================================================================

class SetProtocolVersionRequest::_Internal {
 public:
  static const ::mavsdk::rpc::info_server::ProtocolVersion& protocol_version_info(const SetProtocolVersionRequest* msg);
};

const ::mavsdk::rpc::info_server::ProtocolVersion&
SetProtocolVersionRequest::_Internal::protocol_version_info(const SetProtocolVersionRequest* msg) {
  return *msg->protocol_version_info_;
}
SetProtocolVersionRequest::SetProtocolVersionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.info_server.SetProtocolVersionRequest)
}
SetProtocolVersionRequest::SetProtocolVersionRequest(const SetProtocolVersionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_protocol_version_info()) {
    protocol_version_info_ = new ::mavsdk::rpc::info_server::ProtocolVersion(*from.protocol_version_info_);
  } else {
    protocol_version_info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.info_server.SetProtocolVersionRequest)
}

inline void SetProtocolVersionRequest::SharedCtor() {
protocol_version_info_ = nullptr;
}

SetProtocolVersionRequest::~SetProtocolVersionRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.info_server.SetProtocolVersionRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SetProtocolVersionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete protocol_version_info_;
}

void SetProtocolVersionRequest::ArenaDtor(void* object) {
  SetProtocolVersionRequest* _this = reinterpret_cast< SetProtocolVersionRequest* >(object);
  (void)_this;
}
void SetProtocolVersionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetProtocolVersionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetProtocolVersionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.info_server.SetProtocolVersionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && protocol_version_info_ != nullptr) {
    delete protocol_version_info_;
  }
  protocol_version_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetProtocolVersionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.info_server.ProtocolVersion protocol_version_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_protocol_version_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetProtocolVersionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.info_server.SetProtocolVersionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.info_server.ProtocolVersion protocol_version_info = 1;
  if (this->_internal_has_protocol_version_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::protocol_version_info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.info_server.SetProtocolVersionRequest)
  return target;
}

size_t SetProtocolVersionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.info_server.SetProtocolVersionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.info_server.ProtocolVersion protocol_version_info = 1;
  if (this->_internal_has_protocol_version_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *protocol_version_info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetProtocolVersionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SetProtocolVersionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetProtocolVersionRequest::GetClassData() const { return &_class_data_; }

void SetProtocolVersionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<SetProtocolVersionRequest *>(to)->MergeFrom(
      static_cast<const SetProtocolVersionRequest &>(from));
}


void SetProtocolVersionRequest::MergeFrom(const SetProtocolVersionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.info_server.SetProtocolVersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_protocol_version_info()) {
    _internal_mutable_protocol_version_info()->::mavsdk::rpc::info_server::ProtocolVersion::MergeFrom(from._internal_protocol_version_info());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetProtocolVersionRequest::CopyFrom(const SetProtocolVersionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.info_server.SetProtocolVersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetProtocolVersionRequest::IsInitialized() const {
  return true;
}

void SetProtocolVersionRequest::InternalSwap(SetProtocolVersionRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(protocol_version_info_, other->protocol_version_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetProtocolVersionRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_getter, &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_once,
      file_level_metadata_info_5fserver_2finfo_5fserver_2eproto[8]);
}

// ===================================================================

class SetProtocolVersionResponse::_Internal {
 public:
  static const ::mavsdk::rpc::info_server::InfoResult& info_result(const SetProtocolVersionResponse* msg);
};

const ::mavsdk::rpc::info_server::InfoResult&
SetProtocolVersionResponse::_Internal::info_result(const SetProtocolVersionResponse* msg) {
  return *msg->info_result_;
}
SetProtocolVersionResponse::SetProtocolVersionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.info_server.SetProtocolVersionResponse)
}
SetProtocolVersionResponse::SetProtocolVersionResponse(const SetProtocolVersionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_info_result()) {
    info_result_ = new ::mavsdk::rpc::info_server::InfoResult(*from.info_result_);
  } else {
    info_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.info_server.SetProtocolVersionResponse)
}

inline void SetProtocolVersionResponse::SharedCtor() {
info_result_ = nullptr;
}

SetProtocolVersionResponse::~SetProtocolVersionResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.info_server.SetProtocolVersionResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SetProtocolVersionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete info_result_;
}

void SetProtocolVersionResponse::ArenaDtor(void* object) {
  SetProtocolVersionResponse* _this = reinterpret_cast< SetProtocolVersionResponse* >(object);
  (void)_this;
}
void SetProtocolVersionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetProtocolVersionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetProtocolVersionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.info_server.SetProtocolVersionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && info_result_ != nullptr) {
    delete info_result_;
  }
  info_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetProtocolVersionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.info_server.InfoResult info_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_info_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetProtocolVersionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.info_server.SetProtocolVersionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.info_server.InfoResult info_result = 1;
  if (this->_internal_has_info_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::info_result(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.info_server.SetProtocolVersionResponse)
  return target;
}

size_t SetProtocolVersionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.info_server.SetProtocolVersionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.info_server.InfoResult info_result = 1;
  if (this->_internal_has_info_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetProtocolVersionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SetProtocolVersionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetProtocolVersionResponse::GetClassData() const { return &_class_data_; }

void SetProtocolVersionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<SetProtocolVersionResponse *>(to)->MergeFrom(
      static_cast<const SetProtocolVersionResponse &>(from));
}


void SetProtocolVersionResponse::MergeFrom(const SetProtocolVersionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.info_server.SetProtocolVersionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_info_result()) {
    _internal_mutable_info_result()->::mavsdk::rpc::info_server::InfoResult::MergeFrom(from._internal_info_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetProtocolVersionResponse::CopyFrom(const SetProtocolVersionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.info_server.SetProtocolVersionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetProtocolVersionResponse::IsInitialized() const {
  return true;
}

void SetProtocolVersionResponse::InternalSwap(SetProtocolVersionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(info_result_, other->info_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetProtocolVersionResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_getter, &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_once,
      file_level_metadata_info_5fserver_2finfo_5fserver_2eproto[9]);
}

// ===================================================================

class SetComponentInformationRequest::_Internal {
 public:
  static const ::mavsdk::rpc::info_server::ComponentInformation& component_information_info(const SetComponentInformationRequest* msg);
};

const ::mavsdk::rpc::info_server::ComponentInformation&
SetComponentInformationRequest::_Internal::component_information_info(const SetComponentInformationRequest* msg) {
  return *msg->component_information_info_;
}
SetComponentInformationRequest::SetComponentInformationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.info_server.SetComponentInformationRequest)
}
SetComponentInformationRequest::SetComponentInformationRequest(const SetComponentInformationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_component_information_info()) {
    component_information_info_ = new ::mavsdk::rpc::info_server::ComponentInformation(*from.component_information_info_);
  } else {
    component_information_info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.info_server.SetComponentInformationRequest)
}

inline void SetComponentInformationRequest::SharedCtor() {
component_information_info_ = nullptr;
}

SetComponentInformationRequest::~SetComponentInformationRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.info_server.SetComponentInformationRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SetComponentInformationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete component_information_info_;
}

void SetComponentInformationRequest::ArenaDtor(void* object) {
  SetComponentInformationRequest* _this = reinterpret_cast< SetComponentInformationRequest* >(object);
  (void)_this;
}
void SetComponentInformationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetComponentInformationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetComponentInformationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.info_server.SetComponentInformationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && component_information_info_ != nullptr) {
    delete component_information_info_;
  }
  component_information_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetComponentInformationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.info_server.ComponentInformation component_information_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_component_information_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetComponentInformationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.info_server.SetComponentInformationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.info_server.ComponentInformation component_information_info = 1;
  if (this->_internal_has_component_information_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::component_information_info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.info_server.SetComponentInformationRequest)
  return target;
}

size_t SetComponentInformationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.info_server.SetComponentInformationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.info_server.ComponentInformation component_information_info = 1;
  if (this->_internal_has_component_information_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *component_information_info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetComponentInformationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SetComponentInformationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetComponentInformationRequest::GetClassData() const { return &_class_data_; }

void SetComponentInformationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<SetComponentInformationRequest *>(to)->MergeFrom(
      static_cast<const SetComponentInformationRequest &>(from));
}


void SetComponentInformationRequest::MergeFrom(const SetComponentInformationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.info_server.SetComponentInformationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_component_information_info()) {
    _internal_mutable_component_information_info()->::mavsdk::rpc::info_server::ComponentInformation::MergeFrom(from._internal_component_information_info());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetComponentInformationRequest::CopyFrom(const SetComponentInformationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.info_server.SetComponentInformationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetComponentInformationRequest::IsInitialized() const {
  return true;
}

void SetComponentInformationRequest::InternalSwap(SetComponentInformationRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(component_information_info_, other->component_information_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetComponentInformationRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_getter, &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_once,
      file_level_metadata_info_5fserver_2finfo_5fserver_2eproto[10]);
}

// ===================================================================

class SetComponentInformationResponse::_Internal {
 public:
  static const ::mavsdk::rpc::info_server::InfoResult& info_result(const SetComponentInformationResponse* msg);
};

const ::mavsdk::rpc::info_server::InfoResult&
SetComponentInformationResponse::_Internal::info_result(const SetComponentInformationResponse* msg) {
  return *msg->info_result_;
}
SetComponentInformationResponse::SetComponentInformationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.info_server.SetComponentInformationResponse)
}
SetComponentInformationResponse::SetComponentInformationResponse(const SetComponentInformationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_info_result()) {
    info_result_ = new ::mavsdk::rpc::info_server::InfoResult(*from.info_result_);
  } else {
    info_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.info_server.SetComponentInformationResponse)
}

inline void SetComponentInformationResponse::SharedCtor() {
info_result_ = nullptr;
}

SetComponentInformationResponse::~SetComponentInformationResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.info_server.SetComponentInformationResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SetComponentInformationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete info_result_;
}

void SetComponentInformationResponse::ArenaDtor(void* object) {
  SetComponentInformationResponse* _this = reinterpret_cast< SetComponentInformationResponse* >(object);
  (void)_this;
}
void SetComponentInformationResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetComponentInformationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetComponentInformationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.info_server.SetComponentInformationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && info_result_ != nullptr) {
    delete info_result_;
  }
  info_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetComponentInformationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.info_server.InfoResult info_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_info_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetComponentInformationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.info_server.SetComponentInformationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.info_server.InfoResult info_result = 1;
  if (this->_internal_has_info_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::info_result(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.info_server.SetComponentInformationResponse)
  return target;
}

size_t SetComponentInformationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.info_server.SetComponentInformationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.info_server.InfoResult info_result = 1;
  if (this->_internal_has_info_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetComponentInformationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SetComponentInformationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetComponentInformationResponse::GetClassData() const { return &_class_data_; }

void SetComponentInformationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<SetComponentInformationResponse *>(to)->MergeFrom(
      static_cast<const SetComponentInformationResponse &>(from));
}


void SetComponentInformationResponse::MergeFrom(const SetComponentInformationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.info_server.SetComponentInformationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_info_result()) {
    _internal_mutable_info_result()->::mavsdk::rpc::info_server::InfoResult::MergeFrom(from._internal_info_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetComponentInformationResponse::CopyFrom(const SetComponentInformationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.info_server.SetComponentInformationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetComponentInformationResponse::IsInitialized() const {
  return true;
}

void SetComponentInformationResponse::InternalSwap(SetComponentInformationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(info_result_, other->info_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetComponentInformationResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_getter, &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_once,
      file_level_metadata_info_5fserver_2finfo_5fserver_2eproto[11]);
}

// ===================================================================

class ProtocolVersion::_Internal {
 public:
};

ProtocolVersion::ProtocolVersion(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.info_server.ProtocolVersion)
}
ProtocolVersion::ProtocolVersion(const ProtocolVersion& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  spec_version_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_spec_version_hash().empty()) {
    spec_version_hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_spec_version_hash(), 
      GetArenaForAllocation());
  }
  library_version_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_library_version_hash().empty()) {
    library_version_hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_library_version_hash(), 
      GetArenaForAllocation());
  }
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_version_) -
    reinterpret_cast<char*>(&version_)) + sizeof(max_version_));
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.info_server.ProtocolVersion)
}

inline void ProtocolVersion::SharedCtor() {
spec_version_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
library_version_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&version_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&max_version_) -
    reinterpret_cast<char*>(&version_)) + sizeof(max_version_));
}

ProtocolVersion::~ProtocolVersion() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.info_server.ProtocolVersion)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ProtocolVersion::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  spec_version_hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  library_version_hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtocolVersion::ArenaDtor(void* object) {
  ProtocolVersion* _this = reinterpret_cast< ProtocolVersion* >(object);
  (void)_this;
}
void ProtocolVersion::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtocolVersion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProtocolVersion::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.info_server.ProtocolVersion)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  spec_version_hash_.ClearToEmpty();
  library_version_hash_.ClearToEmpty();
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_version_) -
      reinterpret_cast<char*>(&version_)) + sizeof(max_version_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtocolVersion::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 min_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          min_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 max_version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          max_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string spec_version_hash = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_spec_version_hash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mavsdk.rpc.info_server.ProtocolVersion.spec_version_hash"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string library_version_hash = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_library_version_hash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mavsdk.rpc.info_server.ProtocolVersion.library_version_hash"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtocolVersion::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.info_server.ProtocolVersion)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 version = 1;
  if (this->_internal_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_version(), target);
  }

  // uint32 min_version = 2;
  if (this->_internal_min_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_min_version(), target);
  }

  // uint32 max_version = 3;
  if (this->_internal_max_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_max_version(), target);
  }

  // string spec_version_hash = 4;
  if (!this->_internal_spec_version_hash().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_spec_version_hash().data(), static_cast<int>(this->_internal_spec_version_hash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mavsdk.rpc.info_server.ProtocolVersion.spec_version_hash");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_spec_version_hash(), target);
  }

  // string library_version_hash = 5;
  if (!this->_internal_library_version_hash().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_library_version_hash().data(), static_cast<int>(this->_internal_library_version_hash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mavsdk.rpc.info_server.ProtocolVersion.library_version_hash");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_library_version_hash(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.info_server.ProtocolVersion)
  return target;
}

size_t ProtocolVersion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.info_server.ProtocolVersion)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string spec_version_hash = 4;
  if (!this->_internal_spec_version_hash().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_spec_version_hash());
  }

  // string library_version_hash = 5;
  if (!this->_internal_library_version_hash().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_library_version_hash());
  }

  // uint32 version = 1;
  if (this->_internal_version() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_version());
  }

  // uint32 min_version = 2;
  if (this->_internal_min_version() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_min_version());
  }

  // uint32 max_version = 3;
  if (this->_internal_max_version() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_max_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProtocolVersion::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ProtocolVersion::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProtocolVersion::GetClassData() const { return &_class_data_; }

void ProtocolVersion::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ProtocolVersion *>(to)->MergeFrom(
      static_cast<const ProtocolVersion &>(from));
}


void ProtocolVersion::MergeFrom(const ProtocolVersion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.info_server.ProtocolVersion)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_spec_version_hash().empty()) {
    _internal_set_spec_version_hash(from._internal_spec_version_hash());
  }
  if (!from._internal_library_version_hash().empty()) {
    _internal_set_library_version_hash(from._internal_library_version_hash());
  }
  if (from._internal_version() != 0) {
    _internal_set_version(from._internal_version());
  }
  if (from._internal_min_version() != 0) {
    _internal_set_min_version(from._internal_min_version());
  }
  if (from._internal_max_version() != 0) {
    _internal_set_max_version(from._internal_max_version());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProtocolVersion::CopyFrom(const ProtocolVersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.info_server.ProtocolVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtocolVersion::IsInitialized() const {
  return true;
}

void ProtocolVersion::InternalSwap(ProtocolVersion* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &spec_version_hash_, GetArenaForAllocation(),
      &other->spec_version_hash_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &library_version_hash_, GetArenaForAllocation(),
      &other->library_version_hash_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtocolVersion, max_version_)
      + sizeof(ProtocolVersion::max_version_)
      - PROTOBUF_FIELD_OFFSET(ProtocolVersion, version_)>(
          reinterpret_cast<char*>(&version_),
          reinterpret_cast<char*>(&other->version_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtocolVersion::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_getter, &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_once,
      file_level_metadata_info_5fserver_2finfo_5fserver_2eproto[12]);
}

// ===================================================================

class AutopilotVersion::_Internal {
 public:
};

AutopilotVersion::AutopilotVersion(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.info_server.AutopilotVersion)
}
AutopilotVersion::AutopilotVersion(const AutopilotVersion& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  flight_custom_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_flight_custom_version().empty()) {
    flight_custom_version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_flight_custom_version(), 
      GetArenaForAllocation());
  }
  middleware_custom_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_middleware_custom_version().empty()) {
    middleware_custom_version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_middleware_custom_version(), 
      GetArenaForAllocation());
  }
  os_custom_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_os_custom_version().empty()) {
    os_custom_version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_os_custom_version(), 
      GetArenaForAllocation());
  }
  uid2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uid2().empty()) {
    uid2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uid2(), 
      GetArenaForAllocation());
  }
  ::memcpy(&capabilities_, &from.capabilities_,
    static_cast<size_t>(reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&capabilities_)) + sizeof(uid_));
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.info_server.AutopilotVersion)
}

inline void AutopilotVersion::SharedCtor() {
flight_custom_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
middleware_custom_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
os_custom_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
uid2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&capabilities_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&capabilities_)) + sizeof(uid_));
}

AutopilotVersion::~AutopilotVersion() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.info_server.AutopilotVersion)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AutopilotVersion::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  flight_custom_version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  middleware_custom_version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  os_custom_version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uid2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AutopilotVersion::ArenaDtor(void* object) {
  AutopilotVersion* _this = reinterpret_cast< AutopilotVersion* >(object);
  (void)_this;
}
void AutopilotVersion::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AutopilotVersion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AutopilotVersion::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.info_server.AutopilotVersion)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  flight_custom_version_.ClearToEmpty();
  middleware_custom_version_.ClearToEmpty();
  os_custom_version_.ClearToEmpty();
  uid2_.ClearToEmpty();
  ::memset(&capabilities_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&capabilities_)) + sizeof(uid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AutopilotVersion::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 capabilities = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          capabilities_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 flight_sw_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flight_sw_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 middleware_sw_version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          middleware_sw_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 os_sw_version = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          os_sw_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 board_version = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          board_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string flight_custom_version = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_flight_custom_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mavsdk.rpc.info_server.AutopilotVersion.flight_custom_version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string middleware_custom_version = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_middleware_custom_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mavsdk.rpc.info_server.AutopilotVersion.middleware_custom_version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string os_custom_version = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_os_custom_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mavsdk.rpc.info_server.AutopilotVersion.os_custom_version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 vendor_id = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          vendor_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 product_id = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          product_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 uid = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string uid2 = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_uid2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mavsdk.rpc.info_server.AutopilotVersion.uid2"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AutopilotVersion::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.info_server.AutopilotVersion)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 capabilities = 1;
  if (this->_internal_capabilities() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_capabilities(), target);
  }

  // uint32 flight_sw_version = 2;
  if (this->_internal_flight_sw_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_flight_sw_version(), target);
  }

  // uint32 middleware_sw_version = 3;
  if (this->_internal_middleware_sw_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_middleware_sw_version(), target);
  }

  // uint32 os_sw_version = 4;
  if (this->_internal_os_sw_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_os_sw_version(), target);
  }

  // uint32 board_version = 5;
  if (this->_internal_board_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_board_version(), target);
  }

  // string flight_custom_version = 6;
  if (!this->_internal_flight_custom_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_flight_custom_version().data(), static_cast<int>(this->_internal_flight_custom_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mavsdk.rpc.info_server.AutopilotVersion.flight_custom_version");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_flight_custom_version(), target);
  }

  // string middleware_custom_version = 7;
  if (!this->_internal_middleware_custom_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_middleware_custom_version().data(), static_cast<int>(this->_internal_middleware_custom_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mavsdk.rpc.info_server.AutopilotVersion.middleware_custom_version");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_middleware_custom_version(), target);
  }

  // string os_custom_version = 8;
  if (!this->_internal_os_custom_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_os_custom_version().data(), static_cast<int>(this->_internal_os_custom_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mavsdk.rpc.info_server.AutopilotVersion.os_custom_version");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_os_custom_version(), target);
  }

  // uint32 vendor_id = 9;
  if (this->_internal_vendor_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_vendor_id(), target);
  }

  // uint32 product_id = 10;
  if (this->_internal_product_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(10, this->_internal_product_id(), target);
  }

  // uint64 uid = 11;
  if (this->_internal_uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(11, this->_internal_uid(), target);
  }

  // string uid2 = 12;
  if (!this->_internal_uid2().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uid2().data(), static_cast<int>(this->_internal_uid2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mavsdk.rpc.info_server.AutopilotVersion.uid2");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_uid2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.info_server.AutopilotVersion)
  return target;
}

size_t AutopilotVersion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.info_server.AutopilotVersion)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string flight_custom_version = 6;
  if (!this->_internal_flight_custom_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_flight_custom_version());
  }

  // string middleware_custom_version = 7;
  if (!this->_internal_middleware_custom_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_middleware_custom_version());
  }

  // string os_custom_version = 8;
  if (!this->_internal_os_custom_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_os_custom_version());
  }

  // string uid2 = 12;
  if (!this->_internal_uid2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uid2());
  }

  // uint64 capabilities = 1;
  if (this->_internal_capabilities() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_capabilities());
  }

  // uint32 flight_sw_version = 2;
  if (this->_internal_flight_sw_version() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_flight_sw_version());
  }

  // uint32 middleware_sw_version = 3;
  if (this->_internal_middleware_sw_version() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_middleware_sw_version());
  }

  // uint32 os_sw_version = 4;
  if (this->_internal_os_sw_version() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_os_sw_version());
  }

  // uint32 board_version = 5;
  if (this->_internal_board_version() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_board_version());
  }

  // uint32 vendor_id = 9;
  if (this->_internal_vendor_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_vendor_id());
  }

  // uint32 product_id = 10;
  if (this->_internal_product_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_product_id());
  }

  // uint64 uid = 11;
  if (this->_internal_uid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_uid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AutopilotVersion::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AutopilotVersion::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AutopilotVersion::GetClassData() const { return &_class_data_; }

void AutopilotVersion::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<AutopilotVersion *>(to)->MergeFrom(
      static_cast<const AutopilotVersion &>(from));
}


void AutopilotVersion::MergeFrom(const AutopilotVersion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.info_server.AutopilotVersion)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_flight_custom_version().empty()) {
    _internal_set_flight_custom_version(from._internal_flight_custom_version());
  }
  if (!from._internal_middleware_custom_version().empty()) {
    _internal_set_middleware_custom_version(from._internal_middleware_custom_version());
  }
  if (!from._internal_os_custom_version().empty()) {
    _internal_set_os_custom_version(from._internal_os_custom_version());
  }
  if (!from._internal_uid2().empty()) {
    _internal_set_uid2(from._internal_uid2());
  }
  if (from._internal_capabilities() != 0) {
    _internal_set_capabilities(from._internal_capabilities());
  }
  if (from._internal_flight_sw_version() != 0) {
    _internal_set_flight_sw_version(from._internal_flight_sw_version());
  }
  if (from._internal_middleware_sw_version() != 0) {
    _internal_set_middleware_sw_version(from._internal_middleware_sw_version());
  }
  if (from._internal_os_sw_version() != 0) {
    _internal_set_os_sw_version(from._internal_os_sw_version());
  }
  if (from._internal_board_version() != 0) {
    _internal_set_board_version(from._internal_board_version());
  }
  if (from._internal_vendor_id() != 0) {
    _internal_set_vendor_id(from._internal_vendor_id());
  }
  if (from._internal_product_id() != 0) {
    _internal_set_product_id(from._internal_product_id());
  }
  if (from._internal_uid() != 0) {
    _internal_set_uid(from._internal_uid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AutopilotVersion::CopyFrom(const AutopilotVersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.info_server.AutopilotVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutopilotVersion::IsInitialized() const {
  return true;
}

void AutopilotVersion::InternalSwap(AutopilotVersion* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &flight_custom_version_, GetArenaForAllocation(),
      &other->flight_custom_version_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &middleware_custom_version_, GetArenaForAllocation(),
      &other->middleware_custom_version_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &os_custom_version_, GetArenaForAllocation(),
      &other->os_custom_version_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &uid2_, GetArenaForAllocation(),
      &other->uid2_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AutopilotVersion, uid_)
      + sizeof(AutopilotVersion::uid_)
      - PROTOBUF_FIELD_OFFSET(AutopilotVersion, capabilities_)>(
          reinterpret_cast<char*>(&capabilities_),
          reinterpret_cast<char*>(&other->capabilities_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AutopilotVersion::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_getter, &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_once,
      file_level_metadata_info_5fserver_2finfo_5fserver_2eproto[13]);
}

// ===================================================================

class ComponentInformation::_Internal {
 public:
};

ComponentInformation::ComponentInformation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.info_server.ComponentInformation)
}
ComponentInformation::ComponentInformation(const ComponentInformation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  general_metadata_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_general_metadata_uri().empty()) {
    general_metadata_uri_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_general_metadata_uri(), 
      GetArenaForAllocation());
  }
  peripherals_metadata_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_peripherals_metadata_uri().empty()) {
    peripherals_metadata_uri_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_peripherals_metadata_uri(), 
      GetArenaForAllocation());
  }
  ::memcpy(&time_boot_ms_, &from.time_boot_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&peripherals_metadata_file_crc_) -
    reinterpret_cast<char*>(&time_boot_ms_)) + sizeof(peripherals_metadata_file_crc_));
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.info_server.ComponentInformation)
}

inline void ComponentInformation::SharedCtor() {
general_metadata_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
peripherals_metadata_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&time_boot_ms_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&peripherals_metadata_file_crc_) -
    reinterpret_cast<char*>(&time_boot_ms_)) + sizeof(peripherals_metadata_file_crc_));
}

ComponentInformation::~ComponentInformation() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.info_server.ComponentInformation)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ComponentInformation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  general_metadata_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  peripherals_metadata_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ComponentInformation::ArenaDtor(void* object) {
  ComponentInformation* _this = reinterpret_cast< ComponentInformation* >(object);
  (void)_this;
}
void ComponentInformation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ComponentInformation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ComponentInformation::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.info_server.ComponentInformation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  general_metadata_uri_.ClearToEmpty();
  peripherals_metadata_uri_.ClearToEmpty();
  ::memset(&time_boot_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&peripherals_metadata_file_crc_) -
      reinterpret_cast<char*>(&time_boot_ms_)) + sizeof(peripherals_metadata_file_crc_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ComponentInformation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 time_boot_ms = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          time_boot_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 general_metadata_file_crc = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          general_metadata_file_crc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string general_metadata_uri = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_general_metadata_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mavsdk.rpc.info_server.ComponentInformation.general_metadata_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 peripherals_metadata_file_crc = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          peripherals_metadata_file_crc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string peripherals_metadata_uri = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_peripherals_metadata_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mavsdk.rpc.info_server.ComponentInformation.peripherals_metadata_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ComponentInformation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.info_server.ComponentInformation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 time_boot_ms = 1;
  if (this->_internal_time_boot_ms() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_time_boot_ms(), target);
  }

  // uint32 general_metadata_file_crc = 2;
  if (this->_internal_general_metadata_file_crc() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_general_metadata_file_crc(), target);
  }

  // string general_metadata_uri = 3;
  if (!this->_internal_general_metadata_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_general_metadata_uri().data(), static_cast<int>(this->_internal_general_metadata_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mavsdk.rpc.info_server.ComponentInformation.general_metadata_uri");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_general_metadata_uri(), target);
  }

  // uint32 peripherals_metadata_file_crc = 4;
  if (this->_internal_peripherals_metadata_file_crc() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_peripherals_metadata_file_crc(), target);
  }

  // string peripherals_metadata_uri = 5;
  if (!this->_internal_peripherals_metadata_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_peripherals_metadata_uri().data(), static_cast<int>(this->_internal_peripherals_metadata_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mavsdk.rpc.info_server.ComponentInformation.peripherals_metadata_uri");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_peripherals_metadata_uri(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.info_server.ComponentInformation)
  return target;
}

size_t ComponentInformation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.info_server.ComponentInformation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string general_metadata_uri = 3;
  if (!this->_internal_general_metadata_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_general_metadata_uri());
  }

  // string peripherals_metadata_uri = 5;
  if (!this->_internal_peripherals_metadata_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_peripherals_metadata_uri());
  }

  // uint32 time_boot_ms = 1;
  if (this->_internal_time_boot_ms() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_time_boot_ms());
  }

  // uint32 general_metadata_file_crc = 2;
  if (this->_internal_general_metadata_file_crc() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_general_metadata_file_crc());
  }

  // uint32 peripherals_metadata_file_crc = 4;
  if (this->_internal_peripherals_metadata_file_crc() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_peripherals_metadata_file_crc());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ComponentInformation::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ComponentInformation::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ComponentInformation::GetClassData() const { return &_class_data_; }

void ComponentInformation::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ComponentInformation *>(to)->MergeFrom(
      static_cast<const ComponentInformation &>(from));
}


void ComponentInformation::MergeFrom(const ComponentInformation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.info_server.ComponentInformation)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_general_metadata_uri().empty()) {
    _internal_set_general_metadata_uri(from._internal_general_metadata_uri());
  }
  if (!from._internal_peripherals_metadata_uri().empty()) {
    _internal_set_peripherals_metadata_uri(from._internal_peripherals_metadata_uri());
  }
  if (from._internal_time_boot_ms() != 0) {
    _internal_set_time_boot_ms(from._internal_time_boot_ms());
  }
  if (from._internal_general_metadata_file_crc() != 0) {
    _internal_set_general_metadata_file_crc(from._internal_general_metadata_file_crc());
  }
  if (from._internal_peripherals_metadata_file_crc() != 0) {
    _internal_set_peripherals_metadata_file_crc(from._internal_peripherals_metadata_file_crc());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ComponentInformation::CopyFrom(const ComponentInformation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.info_server.ComponentInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComponentInformation::IsInitialized() const {
  return true;
}

void ComponentInformation::InternalSwap(ComponentInformation* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &general_metadata_uri_, GetArenaForAllocation(),
      &other->general_metadata_uri_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &peripherals_metadata_uri_, GetArenaForAllocation(),
      &other->peripherals_metadata_uri_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ComponentInformation, peripherals_metadata_file_crc_)
      + sizeof(ComponentInformation::peripherals_metadata_file_crc_)
      - PROTOBUF_FIELD_OFFSET(ComponentInformation, time_boot_ms_)>(
          reinterpret_cast<char*>(&time_boot_ms_),
          reinterpret_cast<char*>(&other->time_boot_ms_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ComponentInformation::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_getter, &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_once,
      file_level_metadata_info_5fserver_2finfo_5fserver_2eproto[14]);
}

// ===================================================================

class InfoResult::_Internal {
 public:
};

InfoResult::InfoResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.info_server.InfoResult)
}
InfoResult::InfoResult(const InfoResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_str_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result_str().empty()) {
    result_str_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_result_str(), 
      GetArenaForAllocation());
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.info_server.InfoResult)
}

inline void InfoResult::SharedCtor() {
result_str_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
result_ = 0;
}

InfoResult::~InfoResult() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.info_server.InfoResult)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void InfoResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  result_str_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void InfoResult::ArenaDtor(void* object) {
  InfoResult* _this = reinterpret_cast< InfoResult* >(object);
  (void)_this;
}
void InfoResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InfoResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InfoResult::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.info_server.InfoResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_str_.ClearToEmpty();
  result_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InfoResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.info_server.InfoResult.Result result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_result(static_cast<::mavsdk::rpc::info_server::InfoResult_Result>(val));
        } else goto handle_unusual;
        continue;
      // string result_str = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_result_str();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mavsdk.rpc.info_server.InfoResult.result_str"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InfoResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.info_server.InfoResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.info_server.InfoResult.Result result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result_str().data(), static_cast<int>(this->_internal_result_str().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mavsdk.rpc.info_server.InfoResult.result_str");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_result_str(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.info_server.InfoResult)
  return target;
}

size_t InfoResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.info_server.InfoResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result_str());
  }

  // .mavsdk.rpc.info_server.InfoResult.Result result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InfoResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InfoResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InfoResult::GetClassData() const { return &_class_data_; }

void InfoResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<InfoResult *>(to)->MergeFrom(
      static_cast<const InfoResult &>(from));
}


void InfoResult::MergeFrom(const InfoResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.info_server.InfoResult)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result_str().empty()) {
    _internal_set_result_str(from._internal_result_str());
  }
  if (from._internal_result() != 0) {
    _internal_set_result(from._internal_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InfoResult::CopyFrom(const InfoResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.info_server.InfoResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InfoResult::IsInitialized() const {
  return true;
}

void InfoResult::InternalSwap(InfoResult* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &result_str_, GetArenaForAllocation(),
      &other->result_str_, other->GetArenaForAllocation()
  );
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InfoResult::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_getter, &descriptor_table_info_5fserver_2finfo_5fserver_2eproto_once,
      file_level_metadata_info_5fserver_2finfo_5fserver_2eproto[15]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace info_server
}  // namespace rpc
}  // namespace mavsdk
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::info_server::ProvideComponentInformationRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::info_server::ProvideComponentInformationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::info_server::ProvideComponentInformationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::info_server::ProvideComponentInformationResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::info_server::ProvideComponentInformationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::info_server::ProvideComponentInformationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::info_server::SetAutopilotVersionRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::info_server::SetAutopilotVersionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::info_server::SetAutopilotVersionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::info_server::SetAutopilotVersionResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::info_server::SetAutopilotVersionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::info_server::SetAutopilotVersionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::info_server::SetProtocolVersionRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::info_server::SetProtocolVersionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::info_server::SetProtocolVersionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::info_server::SetProtocolVersionResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::info_server::SetProtocolVersionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::info_server::SetProtocolVersionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::info_server::SetComponentInformationRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::info_server::SetComponentInformationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::info_server::SetComponentInformationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::info_server::SetComponentInformationResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::info_server::SetComponentInformationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::info_server::SetComponentInformationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::info_server::ProtocolVersion* Arena::CreateMaybeMessage< ::mavsdk::rpc::info_server::ProtocolVersion >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::info_server::ProtocolVersion >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::info_server::AutopilotVersion* Arena::CreateMaybeMessage< ::mavsdk::rpc::info_server::AutopilotVersion >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::info_server::AutopilotVersion >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::info_server::ComponentInformation* Arena::CreateMaybeMessage< ::mavsdk::rpc::info_server::ComponentInformation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::info_server::ComponentInformation >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::info_server::InfoResult* Arena::CreateMaybeMessage< ::mavsdk::rpc::info_server::InfoResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::info_server::InfoResult >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
