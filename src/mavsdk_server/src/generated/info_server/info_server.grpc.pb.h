// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: info_server/info_server.proto
#ifndef GRPC_info_5fserver_2finfo_5fserver_2eproto__INCLUDED
#define GRPC_info_5fserver_2finfo_5fserver_2eproto__INCLUDED

#include "info_server/info_server.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace mavsdk {
namespace rpc {
namespace info_server {

// Provide information about the hardware and/or software of a system.
class InfoServerService final {
 public:
  static constexpr char const* service_full_name() {
    return "mavsdk.rpc.info_server.InfoServerService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Provide autopilot version of the system.
    virtual ::grpc::Status ProvideAutopilotVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest& request, ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse>> AsyncProvideAutopilotVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse>>(AsyncProvideAutopilotVersionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse>> PrepareAsyncProvideAutopilotVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse>>(PrepareAsyncProvideAutopilotVersionRaw(context, request, cq));
    }
    // Provide protocol version of the system.
    virtual ::grpc::Status ProvideProtocolVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest& request, ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse>> AsyncProvideProtocolVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse>>(AsyncProvideProtocolVersionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse>> PrepareAsyncProvideProtocolVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse>>(PrepareAsyncProvideProtocolVersionRaw(context, request, cq));
    }
    // Provide protocol version of the system.
    virtual ::grpc::Status ProvideComponentInformation(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideComponentInformationRequest& request, ::mavsdk::rpc::info_server::ProvideComponentInformationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::ProvideComponentInformationResponse>> AsyncProvideComponentInformation(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideComponentInformationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::ProvideComponentInformationResponse>>(AsyncProvideComponentInformationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::ProvideComponentInformationResponse>> PrepareAsyncProvideComponentInformation(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideComponentInformationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::ProvideComponentInformationResponse>>(PrepareAsyncProvideComponentInformationRaw(context, request, cq));
    }
    // Set autopilot version of the system.
    virtual ::grpc::Status SetAutopilotVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetAutopilotVersionRequest& request, ::mavsdk::rpc::info_server::SetAutopilotVersionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::SetAutopilotVersionResponse>> AsyncSetAutopilotVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetAutopilotVersionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::SetAutopilotVersionResponse>>(AsyncSetAutopilotVersionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::SetAutopilotVersionResponse>> PrepareAsyncSetAutopilotVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetAutopilotVersionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::SetAutopilotVersionResponse>>(PrepareAsyncSetAutopilotVersionRaw(context, request, cq));
    }
    // Set protocol version of the system.
    virtual ::grpc::Status SetProtocolVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetProtocolVersionRequest& request, ::mavsdk::rpc::info_server::SetProtocolVersionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::SetProtocolVersionResponse>> AsyncSetProtocolVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetProtocolVersionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::SetProtocolVersionResponse>>(AsyncSetProtocolVersionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::SetProtocolVersionResponse>> PrepareAsyncSetProtocolVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetProtocolVersionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::SetProtocolVersionResponse>>(PrepareAsyncSetProtocolVersionRaw(context, request, cq));
    }
    // Set protocol version of the system.
    virtual ::grpc::Status SetComponentInformation(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetComponentInformationRequest& request, ::mavsdk::rpc::info_server::SetComponentInformationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::SetComponentInformationResponse>> AsyncSetComponentInformation(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetComponentInformationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::SetComponentInformationResponse>>(AsyncSetComponentInformationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::SetComponentInformationResponse>> PrepareAsyncSetComponentInformation(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetComponentInformationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::SetComponentInformationResponse>>(PrepareAsyncSetComponentInformationRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Provide autopilot version of the system.
      virtual void ProvideAutopilotVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest* request, ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ProvideAutopilotVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest* request, ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Provide protocol version of the system.
      virtual void ProvideProtocolVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest* request, ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ProvideProtocolVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest* request, ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Provide protocol version of the system.
      virtual void ProvideComponentInformation(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideComponentInformationRequest* request, ::mavsdk::rpc::info_server::ProvideComponentInformationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ProvideComponentInformation(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideComponentInformationRequest* request, ::mavsdk::rpc::info_server::ProvideComponentInformationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Set autopilot version of the system.
      virtual void SetAutopilotVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetAutopilotVersionRequest* request, ::mavsdk::rpc::info_server::SetAutopilotVersionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetAutopilotVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetAutopilotVersionRequest* request, ::mavsdk::rpc::info_server::SetAutopilotVersionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Set protocol version of the system.
      virtual void SetProtocolVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetProtocolVersionRequest* request, ::mavsdk::rpc::info_server::SetProtocolVersionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetProtocolVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetProtocolVersionRequest* request, ::mavsdk::rpc::info_server::SetProtocolVersionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Set protocol version of the system.
      virtual void SetComponentInformation(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetComponentInformationRequest* request, ::mavsdk::rpc::info_server::SetComponentInformationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetComponentInformation(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetComponentInformationRequest* request, ::mavsdk::rpc::info_server::SetComponentInformationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse>* AsyncProvideAutopilotVersionRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse>* PrepareAsyncProvideAutopilotVersionRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse>* AsyncProvideProtocolVersionRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse>* PrepareAsyncProvideProtocolVersionRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::ProvideComponentInformationResponse>* AsyncProvideComponentInformationRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideComponentInformationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::ProvideComponentInformationResponse>* PrepareAsyncProvideComponentInformationRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideComponentInformationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::SetAutopilotVersionResponse>* AsyncSetAutopilotVersionRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetAutopilotVersionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::SetAutopilotVersionResponse>* PrepareAsyncSetAutopilotVersionRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetAutopilotVersionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::SetProtocolVersionResponse>* AsyncSetProtocolVersionRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetProtocolVersionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::SetProtocolVersionResponse>* PrepareAsyncSetProtocolVersionRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetProtocolVersionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::SetComponentInformationResponse>* AsyncSetComponentInformationRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetComponentInformationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::info_server::SetComponentInformationResponse>* PrepareAsyncSetComponentInformationRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetComponentInformationRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status ProvideAutopilotVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest& request, ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse>> AsyncProvideAutopilotVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse>>(AsyncProvideAutopilotVersionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse>> PrepareAsyncProvideAutopilotVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse>>(PrepareAsyncProvideAutopilotVersionRaw(context, request, cq));
    }
    ::grpc::Status ProvideProtocolVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest& request, ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse>> AsyncProvideProtocolVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse>>(AsyncProvideProtocolVersionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse>> PrepareAsyncProvideProtocolVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse>>(PrepareAsyncProvideProtocolVersionRaw(context, request, cq));
    }
    ::grpc::Status ProvideComponentInformation(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideComponentInformationRequest& request, ::mavsdk::rpc::info_server::ProvideComponentInformationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::ProvideComponentInformationResponse>> AsyncProvideComponentInformation(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideComponentInformationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::ProvideComponentInformationResponse>>(AsyncProvideComponentInformationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::ProvideComponentInformationResponse>> PrepareAsyncProvideComponentInformation(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideComponentInformationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::ProvideComponentInformationResponse>>(PrepareAsyncProvideComponentInformationRaw(context, request, cq));
    }
    ::grpc::Status SetAutopilotVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetAutopilotVersionRequest& request, ::mavsdk::rpc::info_server::SetAutopilotVersionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::SetAutopilotVersionResponse>> AsyncSetAutopilotVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetAutopilotVersionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::SetAutopilotVersionResponse>>(AsyncSetAutopilotVersionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::SetAutopilotVersionResponse>> PrepareAsyncSetAutopilotVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetAutopilotVersionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::SetAutopilotVersionResponse>>(PrepareAsyncSetAutopilotVersionRaw(context, request, cq));
    }
    ::grpc::Status SetProtocolVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetProtocolVersionRequest& request, ::mavsdk::rpc::info_server::SetProtocolVersionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::SetProtocolVersionResponse>> AsyncSetProtocolVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetProtocolVersionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::SetProtocolVersionResponse>>(AsyncSetProtocolVersionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::SetProtocolVersionResponse>> PrepareAsyncSetProtocolVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetProtocolVersionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::SetProtocolVersionResponse>>(PrepareAsyncSetProtocolVersionRaw(context, request, cq));
    }
    ::grpc::Status SetComponentInformation(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetComponentInformationRequest& request, ::mavsdk::rpc::info_server::SetComponentInformationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::SetComponentInformationResponse>> AsyncSetComponentInformation(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetComponentInformationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::SetComponentInformationResponse>>(AsyncSetComponentInformationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::SetComponentInformationResponse>> PrepareAsyncSetComponentInformation(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetComponentInformationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::SetComponentInformationResponse>>(PrepareAsyncSetComponentInformationRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void ProvideAutopilotVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest* request, ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse* response, std::function<void(::grpc::Status)>) override;
      void ProvideAutopilotVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest* request, ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ProvideProtocolVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest* request, ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse* response, std::function<void(::grpc::Status)>) override;
      void ProvideProtocolVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest* request, ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ProvideComponentInformation(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideComponentInformationRequest* request, ::mavsdk::rpc::info_server::ProvideComponentInformationResponse* response, std::function<void(::grpc::Status)>) override;
      void ProvideComponentInformation(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideComponentInformationRequest* request, ::mavsdk::rpc::info_server::ProvideComponentInformationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetAutopilotVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetAutopilotVersionRequest* request, ::mavsdk::rpc::info_server::SetAutopilotVersionResponse* response, std::function<void(::grpc::Status)>) override;
      void SetAutopilotVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetAutopilotVersionRequest* request, ::mavsdk::rpc::info_server::SetAutopilotVersionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetProtocolVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetProtocolVersionRequest* request, ::mavsdk::rpc::info_server::SetProtocolVersionResponse* response, std::function<void(::grpc::Status)>) override;
      void SetProtocolVersion(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetProtocolVersionRequest* request, ::mavsdk::rpc::info_server::SetProtocolVersionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetComponentInformation(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetComponentInformationRequest* request, ::mavsdk::rpc::info_server::SetComponentInformationResponse* response, std::function<void(::grpc::Status)>) override;
      void SetComponentInformation(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetComponentInformationRequest* request, ::mavsdk::rpc::info_server::SetComponentInformationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse>* AsyncProvideAutopilotVersionRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse>* PrepareAsyncProvideAutopilotVersionRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse>* AsyncProvideProtocolVersionRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse>* PrepareAsyncProvideProtocolVersionRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::ProvideComponentInformationResponse>* AsyncProvideComponentInformationRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideComponentInformationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::ProvideComponentInformationResponse>* PrepareAsyncProvideComponentInformationRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::ProvideComponentInformationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::SetAutopilotVersionResponse>* AsyncSetAutopilotVersionRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetAutopilotVersionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::SetAutopilotVersionResponse>* PrepareAsyncSetAutopilotVersionRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetAutopilotVersionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::SetProtocolVersionResponse>* AsyncSetProtocolVersionRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetProtocolVersionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::SetProtocolVersionResponse>* PrepareAsyncSetProtocolVersionRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetProtocolVersionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::SetComponentInformationResponse>* AsyncSetComponentInformationRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetComponentInformationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::info_server::SetComponentInformationResponse>* PrepareAsyncSetComponentInformationRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::info_server::SetComponentInformationRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_ProvideAutopilotVersion_;
    const ::grpc::internal::RpcMethod rpcmethod_ProvideProtocolVersion_;
    const ::grpc::internal::RpcMethod rpcmethod_ProvideComponentInformation_;
    const ::grpc::internal::RpcMethod rpcmethod_SetAutopilotVersion_;
    const ::grpc::internal::RpcMethod rpcmethod_SetProtocolVersion_;
    const ::grpc::internal::RpcMethod rpcmethod_SetComponentInformation_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Provide autopilot version of the system.
    virtual ::grpc::Status ProvideAutopilotVersion(::grpc::ServerContext* context, const ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest* request, ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse* response);
    // Provide protocol version of the system.
    virtual ::grpc::Status ProvideProtocolVersion(::grpc::ServerContext* context, const ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest* request, ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse* response);
    // Provide protocol version of the system.
    virtual ::grpc::Status ProvideComponentInformation(::grpc::ServerContext* context, const ::mavsdk::rpc::info_server::ProvideComponentInformationRequest* request, ::mavsdk::rpc::info_server::ProvideComponentInformationResponse* response);
    // Set autopilot version of the system.
    virtual ::grpc::Status SetAutopilotVersion(::grpc::ServerContext* context, const ::mavsdk::rpc::info_server::SetAutopilotVersionRequest* request, ::mavsdk::rpc::info_server::SetAutopilotVersionResponse* response);
    // Set protocol version of the system.
    virtual ::grpc::Status SetProtocolVersion(::grpc::ServerContext* context, const ::mavsdk::rpc::info_server::SetProtocolVersionRequest* request, ::mavsdk::rpc::info_server::SetProtocolVersionResponse* response);
    // Set protocol version of the system.
    virtual ::grpc::Status SetComponentInformation(::grpc::ServerContext* context, const ::mavsdk::rpc::info_server::SetComponentInformationRequest* request, ::mavsdk::rpc::info_server::SetComponentInformationResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_ProvideAutopilotVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ProvideAutopilotVersion() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_ProvideAutopilotVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ProvideAutopilotVersion(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest* /*request*/, ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestProvideAutopilotVersion(::grpc::ServerContext* context, ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest* request, ::grpc::ServerAsyncResponseWriter< ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ProvideProtocolVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ProvideProtocolVersion() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_ProvideProtocolVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ProvideProtocolVersion(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest* /*request*/, ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestProvideProtocolVersion(::grpc::ServerContext* context, ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest* request, ::grpc::ServerAsyncResponseWriter< ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ProvideComponentInformation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ProvideComponentInformation() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_ProvideComponentInformation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ProvideComponentInformation(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::ProvideComponentInformationRequest* /*request*/, ::mavsdk::rpc::info_server::ProvideComponentInformationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestProvideComponentInformation(::grpc::ServerContext* context, ::mavsdk::rpc::info_server::ProvideComponentInformationRequest* request, ::grpc::ServerAsyncResponseWriter< ::mavsdk::rpc::info_server::ProvideComponentInformationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetAutopilotVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetAutopilotVersion() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_SetAutopilotVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetAutopilotVersion(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::SetAutopilotVersionRequest* /*request*/, ::mavsdk::rpc::info_server::SetAutopilotVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetAutopilotVersion(::grpc::ServerContext* context, ::mavsdk::rpc::info_server::SetAutopilotVersionRequest* request, ::grpc::ServerAsyncResponseWriter< ::mavsdk::rpc::info_server::SetAutopilotVersionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetProtocolVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetProtocolVersion() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_SetProtocolVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetProtocolVersion(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::SetProtocolVersionRequest* /*request*/, ::mavsdk::rpc::info_server::SetProtocolVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetProtocolVersion(::grpc::ServerContext* context, ::mavsdk::rpc::info_server::SetProtocolVersionRequest* request, ::grpc::ServerAsyncResponseWriter< ::mavsdk::rpc::info_server::SetProtocolVersionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetComponentInformation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetComponentInformation() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_SetComponentInformation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetComponentInformation(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::SetComponentInformationRequest* /*request*/, ::mavsdk::rpc::info_server::SetComponentInformationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetComponentInformation(::grpc::ServerContext* context, ::mavsdk::rpc::info_server::SetComponentInformationRequest* request, ::grpc::ServerAsyncResponseWriter< ::mavsdk::rpc::info_server::SetComponentInformationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_ProvideAutopilotVersion<WithAsyncMethod_ProvideProtocolVersion<WithAsyncMethod_ProvideComponentInformation<WithAsyncMethod_SetAutopilotVersion<WithAsyncMethod_SetProtocolVersion<WithAsyncMethod_SetComponentInformation<Service > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_ProvideAutopilotVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ProvideAutopilotVersion() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest, ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest* request, ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse* response) { return this->ProvideAutopilotVersion(context, request, response); }));}
    void SetMessageAllocatorFor_ProvideAutopilotVersion(
        ::grpc::MessageAllocator< ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest, ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest, ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ProvideAutopilotVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ProvideAutopilotVersion(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest* /*request*/, ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ProvideAutopilotVersion(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest* /*request*/, ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ProvideProtocolVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ProvideProtocolVersion() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest, ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest* request, ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse* response) { return this->ProvideProtocolVersion(context, request, response); }));}
    void SetMessageAllocatorFor_ProvideProtocolVersion(
        ::grpc::MessageAllocator< ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest, ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest, ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ProvideProtocolVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ProvideProtocolVersion(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest* /*request*/, ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ProvideProtocolVersion(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest* /*request*/, ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ProvideComponentInformation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ProvideComponentInformation() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::info_server::ProvideComponentInformationRequest, ::mavsdk::rpc::info_server::ProvideComponentInformationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::info_server::ProvideComponentInformationRequest* request, ::mavsdk::rpc::info_server::ProvideComponentInformationResponse* response) { return this->ProvideComponentInformation(context, request, response); }));}
    void SetMessageAllocatorFor_ProvideComponentInformation(
        ::grpc::MessageAllocator< ::mavsdk::rpc::info_server::ProvideComponentInformationRequest, ::mavsdk::rpc::info_server::ProvideComponentInformationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::info_server::ProvideComponentInformationRequest, ::mavsdk::rpc::info_server::ProvideComponentInformationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ProvideComponentInformation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ProvideComponentInformation(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::ProvideComponentInformationRequest* /*request*/, ::mavsdk::rpc::info_server::ProvideComponentInformationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ProvideComponentInformation(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::info_server::ProvideComponentInformationRequest* /*request*/, ::mavsdk::rpc::info_server::ProvideComponentInformationResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetAutopilotVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetAutopilotVersion() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::info_server::SetAutopilotVersionRequest, ::mavsdk::rpc::info_server::SetAutopilotVersionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::info_server::SetAutopilotVersionRequest* request, ::mavsdk::rpc::info_server::SetAutopilotVersionResponse* response) { return this->SetAutopilotVersion(context, request, response); }));}
    void SetMessageAllocatorFor_SetAutopilotVersion(
        ::grpc::MessageAllocator< ::mavsdk::rpc::info_server::SetAutopilotVersionRequest, ::mavsdk::rpc::info_server::SetAutopilotVersionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::info_server::SetAutopilotVersionRequest, ::mavsdk::rpc::info_server::SetAutopilotVersionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetAutopilotVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetAutopilotVersion(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::SetAutopilotVersionRequest* /*request*/, ::mavsdk::rpc::info_server::SetAutopilotVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetAutopilotVersion(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::info_server::SetAutopilotVersionRequest* /*request*/, ::mavsdk::rpc::info_server::SetAutopilotVersionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetProtocolVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetProtocolVersion() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::info_server::SetProtocolVersionRequest, ::mavsdk::rpc::info_server::SetProtocolVersionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::info_server::SetProtocolVersionRequest* request, ::mavsdk::rpc::info_server::SetProtocolVersionResponse* response) { return this->SetProtocolVersion(context, request, response); }));}
    void SetMessageAllocatorFor_SetProtocolVersion(
        ::grpc::MessageAllocator< ::mavsdk::rpc::info_server::SetProtocolVersionRequest, ::mavsdk::rpc::info_server::SetProtocolVersionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::info_server::SetProtocolVersionRequest, ::mavsdk::rpc::info_server::SetProtocolVersionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetProtocolVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetProtocolVersion(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::SetProtocolVersionRequest* /*request*/, ::mavsdk::rpc::info_server::SetProtocolVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetProtocolVersion(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::info_server::SetProtocolVersionRequest* /*request*/, ::mavsdk::rpc::info_server::SetProtocolVersionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetComponentInformation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetComponentInformation() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::info_server::SetComponentInformationRequest, ::mavsdk::rpc::info_server::SetComponentInformationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::info_server::SetComponentInformationRequest* request, ::mavsdk::rpc::info_server::SetComponentInformationResponse* response) { return this->SetComponentInformation(context, request, response); }));}
    void SetMessageAllocatorFor_SetComponentInformation(
        ::grpc::MessageAllocator< ::mavsdk::rpc::info_server::SetComponentInformationRequest, ::mavsdk::rpc::info_server::SetComponentInformationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::info_server::SetComponentInformationRequest, ::mavsdk::rpc::info_server::SetComponentInformationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetComponentInformation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetComponentInformation(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::SetComponentInformationRequest* /*request*/, ::mavsdk::rpc::info_server::SetComponentInformationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetComponentInformation(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::info_server::SetComponentInformationRequest* /*request*/, ::mavsdk::rpc::info_server::SetComponentInformationResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_ProvideAutopilotVersion<WithCallbackMethod_ProvideProtocolVersion<WithCallbackMethod_ProvideComponentInformation<WithCallbackMethod_SetAutopilotVersion<WithCallbackMethod_SetProtocolVersion<WithCallbackMethod_SetComponentInformation<Service > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_ProvideAutopilotVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ProvideAutopilotVersion() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_ProvideAutopilotVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ProvideAutopilotVersion(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest* /*request*/, ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ProvideProtocolVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ProvideProtocolVersion() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_ProvideProtocolVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ProvideProtocolVersion(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest* /*request*/, ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ProvideComponentInformation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ProvideComponentInformation() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_ProvideComponentInformation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ProvideComponentInformation(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::ProvideComponentInformationRequest* /*request*/, ::mavsdk::rpc::info_server::ProvideComponentInformationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetAutopilotVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetAutopilotVersion() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_SetAutopilotVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetAutopilotVersion(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::SetAutopilotVersionRequest* /*request*/, ::mavsdk::rpc::info_server::SetAutopilotVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetProtocolVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetProtocolVersion() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_SetProtocolVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetProtocolVersion(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::SetProtocolVersionRequest* /*request*/, ::mavsdk::rpc::info_server::SetProtocolVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetComponentInformation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetComponentInformation() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_SetComponentInformation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetComponentInformation(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::SetComponentInformationRequest* /*request*/, ::mavsdk::rpc::info_server::SetComponentInformationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_ProvideAutopilotVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ProvideAutopilotVersion() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_ProvideAutopilotVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ProvideAutopilotVersion(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest* /*request*/, ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestProvideAutopilotVersion(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ProvideProtocolVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ProvideProtocolVersion() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_ProvideProtocolVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ProvideProtocolVersion(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest* /*request*/, ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestProvideProtocolVersion(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ProvideComponentInformation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ProvideComponentInformation() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_ProvideComponentInformation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ProvideComponentInformation(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::ProvideComponentInformationRequest* /*request*/, ::mavsdk::rpc::info_server::ProvideComponentInformationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestProvideComponentInformation(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetAutopilotVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetAutopilotVersion() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_SetAutopilotVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetAutopilotVersion(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::SetAutopilotVersionRequest* /*request*/, ::mavsdk::rpc::info_server::SetAutopilotVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetAutopilotVersion(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetProtocolVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetProtocolVersion() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_SetProtocolVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetProtocolVersion(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::SetProtocolVersionRequest* /*request*/, ::mavsdk::rpc::info_server::SetProtocolVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetProtocolVersion(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetComponentInformation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetComponentInformation() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_SetComponentInformation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetComponentInformation(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::SetComponentInformationRequest* /*request*/, ::mavsdk::rpc::info_server::SetComponentInformationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetComponentInformation(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ProvideAutopilotVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ProvideAutopilotVersion() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ProvideAutopilotVersion(context, request, response); }));
    }
    ~WithRawCallbackMethod_ProvideAutopilotVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ProvideAutopilotVersion(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest* /*request*/, ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ProvideAutopilotVersion(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ProvideProtocolVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ProvideProtocolVersion() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ProvideProtocolVersion(context, request, response); }));
    }
    ~WithRawCallbackMethod_ProvideProtocolVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ProvideProtocolVersion(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest* /*request*/, ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ProvideProtocolVersion(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ProvideComponentInformation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ProvideComponentInformation() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ProvideComponentInformation(context, request, response); }));
    }
    ~WithRawCallbackMethod_ProvideComponentInformation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ProvideComponentInformation(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::ProvideComponentInformationRequest* /*request*/, ::mavsdk::rpc::info_server::ProvideComponentInformationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ProvideComponentInformation(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetAutopilotVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetAutopilotVersion() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetAutopilotVersion(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetAutopilotVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetAutopilotVersion(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::SetAutopilotVersionRequest* /*request*/, ::mavsdk::rpc::info_server::SetAutopilotVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetAutopilotVersion(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetProtocolVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetProtocolVersion() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetProtocolVersion(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetProtocolVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetProtocolVersion(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::SetProtocolVersionRequest* /*request*/, ::mavsdk::rpc::info_server::SetProtocolVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetProtocolVersion(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetComponentInformation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetComponentInformation() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetComponentInformation(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetComponentInformation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetComponentInformation(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::SetComponentInformationRequest* /*request*/, ::mavsdk::rpc::info_server::SetComponentInformationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetComponentInformation(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ProvideAutopilotVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ProvideAutopilotVersion() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest, ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest, ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse>* streamer) {
                       return this->StreamedProvideAutopilotVersion(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ProvideAutopilotVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ProvideAutopilotVersion(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest* /*request*/, ::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedProvideAutopilotVersion(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mavsdk::rpc::info_server::ProvideAutopilotVersionRequest,::mavsdk::rpc::info_server::ProvideAutopilotVersionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ProvideProtocolVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ProvideProtocolVersion() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest, ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest, ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse>* streamer) {
                       return this->StreamedProvideProtocolVersion(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ProvideProtocolVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ProvideProtocolVersion(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest* /*request*/, ::mavsdk::rpc::info_server::ProvideProtocolVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedProvideProtocolVersion(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mavsdk::rpc::info_server::ProvideProtocolVersionRequest,::mavsdk::rpc::info_server::ProvideProtocolVersionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ProvideComponentInformation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ProvideComponentInformation() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::mavsdk::rpc::info_server::ProvideComponentInformationRequest, ::mavsdk::rpc::info_server::ProvideComponentInformationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::mavsdk::rpc::info_server::ProvideComponentInformationRequest, ::mavsdk::rpc::info_server::ProvideComponentInformationResponse>* streamer) {
                       return this->StreamedProvideComponentInformation(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ProvideComponentInformation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ProvideComponentInformation(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::ProvideComponentInformationRequest* /*request*/, ::mavsdk::rpc::info_server::ProvideComponentInformationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedProvideComponentInformation(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mavsdk::rpc::info_server::ProvideComponentInformationRequest,::mavsdk::rpc::info_server::ProvideComponentInformationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetAutopilotVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetAutopilotVersion() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::mavsdk::rpc::info_server::SetAutopilotVersionRequest, ::mavsdk::rpc::info_server::SetAutopilotVersionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::mavsdk::rpc::info_server::SetAutopilotVersionRequest, ::mavsdk::rpc::info_server::SetAutopilotVersionResponse>* streamer) {
                       return this->StreamedSetAutopilotVersion(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetAutopilotVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetAutopilotVersion(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::SetAutopilotVersionRequest* /*request*/, ::mavsdk::rpc::info_server::SetAutopilotVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetAutopilotVersion(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mavsdk::rpc::info_server::SetAutopilotVersionRequest,::mavsdk::rpc::info_server::SetAutopilotVersionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetProtocolVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetProtocolVersion() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::mavsdk::rpc::info_server::SetProtocolVersionRequest, ::mavsdk::rpc::info_server::SetProtocolVersionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::mavsdk::rpc::info_server::SetProtocolVersionRequest, ::mavsdk::rpc::info_server::SetProtocolVersionResponse>* streamer) {
                       return this->StreamedSetProtocolVersion(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetProtocolVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetProtocolVersion(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::SetProtocolVersionRequest* /*request*/, ::mavsdk::rpc::info_server::SetProtocolVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetProtocolVersion(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mavsdk::rpc::info_server::SetProtocolVersionRequest,::mavsdk::rpc::info_server::SetProtocolVersionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetComponentInformation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetComponentInformation() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::mavsdk::rpc::info_server::SetComponentInformationRequest, ::mavsdk::rpc::info_server::SetComponentInformationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::mavsdk::rpc::info_server::SetComponentInformationRequest, ::mavsdk::rpc::info_server::SetComponentInformationResponse>* streamer) {
                       return this->StreamedSetComponentInformation(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetComponentInformation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetComponentInformation(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::info_server::SetComponentInformationRequest* /*request*/, ::mavsdk::rpc::info_server::SetComponentInformationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetComponentInformation(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mavsdk::rpc::info_server::SetComponentInformationRequest,::mavsdk::rpc::info_server::SetComponentInformationResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_ProvideAutopilotVersion<WithStreamedUnaryMethod_ProvideProtocolVersion<WithStreamedUnaryMethod_ProvideComponentInformation<WithStreamedUnaryMethod_SetAutopilotVersion<WithStreamedUnaryMethod_SetProtocolVersion<WithStreamedUnaryMethod_SetComponentInformation<Service > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_ProvideAutopilotVersion<WithStreamedUnaryMethod_ProvideProtocolVersion<WithStreamedUnaryMethod_ProvideComponentInformation<WithStreamedUnaryMethod_SetAutopilotVersion<WithStreamedUnaryMethod_SetProtocolVersion<WithStreamedUnaryMethod_SetComponentInformation<Service > > > > > > StreamedService;
};

}  // namespace info_server
}  // namespace rpc
}  // namespace mavsdk


#endif  // GRPC_info_5fserver_2finfo_5fserver_2eproto__INCLUDED
